/*
Natro Macro (https://github.com/NatroTeam/NatroMacro)
Copyright © Natro Team (https://github.com/NatroTeam)

This file is part of Natro Macro. Our source code will always be open and available.

Natro Macro is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

Natro Macro is distributed in the hope that it will be useful. This does not give you the right to steal sections from our code, distribute it under your own name, then slander the macro.

You should have received a copy of the license along with Natro Macro. If not, please redownload from an official source.
*/

#SingleInstance Force
#Requires AutoHotkey v2.0

#Include "%A_ScriptDir%\..\lib\Gdip_All.ahk"
#Include "%A_ScriptDir%\..\lib\Gdip_ImageSearch.ahk"
#Include "%A_ScriptDir%\..\lib\Roblox.ahk"
#Include "%A_ScriptDir%\..\lib\DurationFromSeconds.ahk"
#Include "%A_ScriptDir%\..\lib\nowUnix.ahk"

#Warn VarUnset, Off

SetWorkingDir A_ScriptDir "\.."


; set version number
version := "2.3"

; ▰▰▰▰▰▰▰▰
; INITIAL SETUP
; ▰▰▰▰▰▰▰▰

; set image width and height, in pixels
w := 6000, h := 5800

; prepare graphics and template bitmap
pToken := Gdip_Startup()
pBM := Gdip_CreateBitmap(w, h)
G := Gdip_GraphicsFromImage(pBM)
Gdip_SetSmoothingMode(G, 4)
Gdip_SetInterpolationMode(G, 7)


; IMAGE ASSETS
; store buff icons for drawing
(bitmaps := Map()).CaseSense := 0

; buff graphs
bitmaps["pBMbabylove"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMballoonaura"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMbear"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMbombcombo"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMboost"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMhoneymark"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMpollenmark"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMfestivemark"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMReindeerFetch"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMhaste"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMfocus"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAMAAAAOusbgAAACeVBMVEUB/gANDA0MDQsLDQoKDQ0NDA8NCwoKDQsLCwwC/AEBGwAAIgALDA4NCwwKDgkJDwcKDQ8JDwkIDgsAHQAEEwMAKQAAFgAGDwgDFwMPCwwNDgkHEwYBFAEOChAODg4GEQgGEQUALAALDBAE+gMBGQEAHwAL9A4D+wIT8RMI+AoPCwgO9AwAPQAPCg4AJgAAJAAU7RUI+QUP8g8MDQcF+QUDFAUANgADEgYM9gkH+AcDFgQASQAAGAANDREF+ggKEQgI9wcI9gsAPwAV7xMAXQAW5BgQ7xECWAIARwAAOgAAOAAL9g4IEAQBUwIAMwAALgAX7BsV2RgZ7BcO8xERoxEL+AoBZgEATQEBSwEBRQEAMAAawhcV5xUVrhUS9BAO9g0ODwwF/AUCYQIBTwEAQgAX8BkVyxUQ8hMLDAoJ9AkIagcCbwICbAIAVgAZzxgSwxIRkRAHfggD+wYZxxoYuhYR5hINnQ4KgwoFXAUDiwIc6h0b0xobyxob5hgU8BcT3RQU4hMQrhINjA0NfAwMkAsAYwAh5CAfzSAa2RsZ3RkZ4RgUxhQS6hMT7w4MlQwFpAUGDQQE+AMEeQMDdQMDEAId4B4a5BwbuxsWtRoVvhYWshYVzhQUnhMTqxIUqBIR1RERshEPuBAOpw4MwA0Nmg0IiAkJ+ggJdAgBcgIg1CIZ1RkY6RgV0xgV6RYR7BERiBEPgw4O7g0MsQkEhAMBkwEAgAAg3B8f1x8Z2RUSuhEP0A8N8QsKoAoJcAkHlQcHmgUBnwISyhAO2gsKqwoHDAkQmBAN6QwD/gUftB8bqxkKYwkKDAkL4Q0HtQYBqwEjwSAtpywpmSMaehU9AspzAAARV0lEQVRo3u2a91caWRTHlxlgcIYiDE0gAgoIimBDFLH3XmM3GjUae4w90Rjd9N577733sslms73vX7R31EVEQM26v+zJ9xyP53Bm5jPv3fvuu/e++eKzPuuzPuuz/n8KTGprW6XfFLZmSiVhqamprfVtMeEHDwZ+8R/KJ0qXcXfXxprjJ06dOlUHmjjRXzN6a9dY6uuY2GWnOaDXktq++/Dq65fn1t1/8OWMHtxfd+bcy56vP/zyXVtseGDQF8uvoIg1teOvfns3cmhrU5YxOmdGKVn5jTeePnl0+fSukr0hMcuODSk52r/vUHm+sUBNaHG72Ek4aRJVp8Tlb716qWdbasi11cvnUIbc1vMX31zPbM5REyQulSv50+JRSsyT26Q4YVJHV7T3Xrl8fkAf47NMxk3OGCj+ZqQzq4Ag7cLExETMn+aQn5+fjMuTSKwKMSlKaSp/8mj3zj0Hl4O83qAr2n5isqmawBVCVaIMafD3pyFzhGJ0ukCitCrsOJmdeePM9u/a/j23TV90p+5wVwEplX/0Z7H8gUOjU2AuT6gQClVcBGGxGfHx/r50uq8vXWDXmrIPXzhdGxET/q9m2VB0q7+3qtpEKqx8GoOG0EEYxpVFyuRSQq024XkN/qErGDQag8Gm0xlsTGmRkoX5b8/cqW09+OnYIENpcd1kvhmX2qwSAQOeP83l8Q7INUTKcGaVWiqX0Sgwmw1g+IMpt2gKq9ovtWwOWf2ppg5Kbt0wcbhCK5TwMYGAzmDAg33pGHiz6ghuju7448+/sgi7EGHB7yDajBC+glRvHdxdUv+p5Ppto1eMau2RjyiK0tnwSEZ8AIC5PKuNTDk8+HzDtlv95UazWDAlzEGmYxKF2Zh5bluE4ftPGG5U29iFLcMmXC5gsVgIcGfAXJ4CF6U8ONuyJybm4fiPX2aapValMxiE8W2mnPaX6XrD0sHhMfe6r26NFudFMgJoLHCeGbCAzxOLmstPbRzLhYv0N88NNRNSK38OGC7kS4mqLd3puqVP9kr986fNIuAGM1YwQNPkAN+PErm2a+jkBn1uArVx6I9178sipAcwNnuWy+FwUJWCrNpy8VjuUreNpD23Roxa29rg4GA/xoopdKgfmO+jVUF21XWHGQJ9pi2Su+nZlSy1WOAbPyeccVC+UNvcOVGkS1i9FAMnlfS8yyIUEn8OkwlrhcKG+vkFB8skUlNTWfGeZIfD+iTob042VlsEDBoVV6jxMuFlVwTQJWJzduPuza1JS1jAsRG3Bm8Uiq38eHgMh8Nmz4BlkUIi+1DfwGsYr+PilRsmhuJwJRsudQb7SoQaU8pgS7pu8eCokJKJdiN+APMNYFDDgGg4DY7MExdkntoQMjcctj6v6yAsAiZzGowgU2AYskpKbC3rTl08OGL8ZEUhKYwE72TQZuTvB7POU4gat2yrd3HV8E3Fp7K1wshgIAMXRREmE6INhqIw25lXd7Qt1rWTx1/2VmttvGAnMIjjjyg1VUMXbge6eoRuYPSnAk3eDBjDgDw1coSr0uQMPwpLClqUgX0ydn/bRUjliB+N4cSFrQmVk2mDfXvn3WLI2PmgihAGI8Cl4jmQZ6InV0EYR3ZGxC4m3YhNLr6aadYoBeBRsDidRD+gIEZqjr2ev2frwo63Z9thrDRYcr6+jriNoFypuaJuUf5lKL29P06k4NMDAgIg+Dtx2Xx4/f5xfbi7rPfo/huEUCKgwxJmBDDY/4CRn1VSUWdfeu4isrrak1vVGgmGwTzTQU5gC2m8vuNerI87++x9damZlPNpNArsZCCUp9IYv7pcZFjIwVbfezFYRdgEU1aaA2b72kRN69J17h0lafPJYZNUSQM5OwZYWSJUd7zZUZ+wALl+c02HSKqaMSp9TuC3R//0wyZPfrL3xf1q+5EprjMYHO1nvOp6/6bkBSLn2KPHBQoeylgRGkoFIsQZTGZObiyN8miiH+IIIazfuWBIElhWMrrx2b3chAQvLh0yejWTyEMR2BcADIJ7HaMnbuwf97jbxNzrSxNJZS5YFoADlAoi+5vze3QJXjLokh/bjXYZjHMeGMP4pse/DsR6MlXSw40d1XgD7KEchMNxgGkAxlQa09OXO1s9gqOS7z1PiyaEXADPE8oTFl46X+95smLGRoxEJC00lCmD950VJICJctx4//gaj2lnzIbdI2pcxXML5qrIuJMD3rbSh79ViI7QQv1kkc5gOqiBJyQqDt3K9ZT8pdasy8LlEH/cgVVS9fU7Gd5Cra6nMVqM0WiRAHaITime9lEhqvzmbm6C+/p315m3hQoeB9aQO7CmYLI4wmuJdaezGYcQInMCI4D1hc2VJSGjR3ZkGNzNVGxES2czmYiEst2ChWT2j5u9xtyEo71NhBKjyZxtPAVmr4hnWMxpNbWl37vxyoxnIzlapW9AgK+vKxTKNJqNqPw9bKXXGFC0r1FkEdCmo5fzgl67FgFTiR5svJsw3ylX1fY3iqQCN2AQgKWmru2pC4CvtBcqXMAw3QBmMkPBOTMvnC9d7+NioPC9L75NIYUs3+lNzVUsmlSUtl3vHbxp8G2BmE+toNlQDWCgAxjlKWCzuGvwceHGfHjZCJt/JIph88EsSAI0hR3P93oHrzn7pVHMo7GduAiPx2UH+PmFrmDTJdryfTdLE1xC5dijp4XSvMRILoq6BSNk9NOjEd5r3tQLQ1UAptNdwaGhUMoGsO3Rae+K5jp2bFj/oQotj4vKnPYFRxaB+PsjEqL5SW29d7D+5JZKXEmfAwZBXe0XCgaPpzaL4ofOQw4KGft2ONoORaGDOw9sqnpXu9L71raqZ18TgOcEoJlw70ftbhKxKO7yL87lVHLYs07IT52ZLmBUJcp6v2fleu/g3Ve6SACjbh/ECBAcIaPfv9p0bZa7oeVJgVbB8wSG3wEctz/MsAC4u6wR50M+7elBPKF267mbrY4bSr9+U26WqrierkdpCIAr94clB3oHbzy3FU+kIQ6wq4PK5HjWZH/YrFM8epxFyhNRj2BkCvzNwuCz5V7BaJ4953pZieOGDb1NIru8YRnA5zyDKaF5YnXX46JZ8OMukUbF8wJe3FRHwFRTNkY8gbkqsTptpOh7R6g7uaWJsC0EppxrAXB3WRq1nBAOzZ04KFeOp/ROhK12OFfxhcOQeXA5LNYC4PULgkmPYA6C8S1k/rd9GQ5wctGds9A14lFgqnrwAH6/KLAcQ92DEQST2IiOE0edsolr+m29VWahH0SZAN+5kQcFUWC+KW7/3gXKzZDTgzBiMLEHm3EtVJrrXHv5xJScbU+xy6DAhW0RQ13Ba1kI15S1PzUpyju4ZTATVyKewP5KTWFXy0C989tHRYxeTSN4kLRQLVg3YBpqrnof1uYdvKplsAtXQjrOobmVkEi5cTTj2pyE62Dq5a+yqaYWxFQayBXsj2qNT8ZCYr2Da9ZVaDyBERrLbmw/WxLisjIODrR0mKV5wX6ewFP7sfdEILX/frOdxwG5Cx58i6njzTPguihic10FIZTB29LprmBKGnX5zdQY7xlI2fVoSATcK9Gmrbx0OtVnfhmxZxRqHxniCSw1ZW7f4x1cQiV7fLdhmkaTa9SdPeNuHhCrS3+TJRLyEQ9gKr2tDfEK3rBlWKQQQK7hygWwv4XM+bY4I9BtJbADEnKLANJbt2Btyo/p3sHpkD5ZBVAvzkvLqfRYfWOjhyw18Hbdl0bo9lDtInQe2EJmnxl/7bUfWHyjCrfOGzGoAeHJzc3vxuo9FKqt288MEzYlhnG5XARxAQvxgvvnH3qrnZJedabYlVASuIARpIF7RBM9fFEf6yHyJdfeqcs2i+VcLp8PQWTum0ssRHl3mNfzqctp0WKJAGKfK1iWqBD9tG9XuMf+S+zDnYeqRPYDAEbYLmCBUtN8fJfBc8mmu/s+Tg39sflgTGXTNp3Zrvc2W2HHr8dplSgNmAzQnAAgV+/r8VwgGyJ2HMrRHhHQ594G6S1bYNNWf9Vy21v0CQzZcaVcZOHSoCXv0rJCMYm5dyI90McT+N72rYV4Hsp2BiMIgOlKXF35ctylX+Rau4Vd/soIWYQrGMT6qM2cfA4hz710VLtJmgj3hIY6m1cmwyymqsPbIoDrVRl3DhXiFmrluS4Lf03BTz+s8bBPfL9pR69II5TNBVPNelmitmloO+zCCyhk89l8k0bZgLAAjKDOZIW58v6xtiD3KyK9r0try5NN+YYTGLi2gt6Jo04z5bFfNXoYWk6JKAVGuY40BmGttZLZb3c+jHLfeSk+ZRTLXYsRAPPkeFxZy5pF9MoDay90FWiEfPqKFRiXD+Dpniay9oAKWjc9A/Xr3Z3aFF28apZgdEpTRaIjdgg16qGbG3IX06FfeexKezVuxZzAIBTlKSUaNSyLJDfRMqOvtwKnzlRZFHwWzBXi6rTjtbrFHf5knL7USdgk8fGwCjn/gCGO8vhycmvZ6Kr5k/Q6fV2+WjGzESFIZCR0FmDkTDQRr654k+7oYi7oXz1fRWstgni4FbAOcCRXqYl7cKrE1U9Wxwx0t2drrcgcMMaiBkzEvb3cCmnxohS1Kn00rQC3+MKi+gcsEHBlMjjOoY5/QlyCyLXUFxcgL5c4DItyuRSYBder35alJyz+wCsm7GRvE3mA3+A/O2I0ODiSpxKLsga3lcY6WyZwb9+ZNK1F4khO6dNmZtElNvPTi+P1S/m6pn7nxFCOxiIX0GfBzOBILu8IWV1+Ypc+KWhm1EGrw1+/2NeZbVfO1mps2CcQGYrJpaKsC+fvQYxePDk89fTZTJPGwsewaTCQmTJUxpVIiZTJ0V17k2bAB2NCNh/viDMp+DA5s+AABIVLTc0dd/bkLu3ziFj9zkuVJlzIh+UxY2pqSaE/S+AsZqju2XTnyefgwYz0453RhJiHOrWKoT3I+pkrJ/KHajbp4ERgaeSIbe/zo8kjEkcVB4Zby1xLx6AR2zXyvDZjZWDUyvqi7olGiNFcJmTkDsGJFWYVm/PLWu4mBy39WwzdzjeHskirgAJPn6AxmcGwXDA5bjJO9t9ck6uD4T4YVtuFeTKmnwMMYiEHcHXmueK70FtauqLCdpddryatEsiDKDCbzWT6cWDkXDieHZ6s21GUXtxzPzMHF+bxoBBwgKmvYuQKddZQy11w/09RUsmOU/kFhELIRacbslNgdiiNE6kQVXScuLn9xJMUEX6E2nTnlKNyKSlqOlxT4pRVLtXOJX1bytW4kMeKj4/3nY7BcDK0goaJcXN2fkWKWaNQoRwmiEP5APxvaPC34qKUkYu3UmPCgz4RHBSl29xzqT2b0AgllKn/AQM5TyglCkXQ7+WjrCkwggIYgaNEm5RoHn7QM74nJNxn6RZ2RCXd5tODjcZCQqHkYwD4B8yQ8VQKm8WqRKm2yRQXEwhg/xZKwfM6J08ca81d8nhds8ddfe8OV04dZDOnD/0oMAQI3oEDPOh3UIKfMYwvwPhW3FzddaWvOKwNugf/Uj7X9h7rrmvPKiTFYgX1vRFKORqCrF0LuIYGarCQh0usFjFOEqb861v6j666tjyfzgWFpI71lV1Nay5QE3ahVcJFqTAFPSIMQxtkYFahQiHGtYXG/PKnj75+MbAKDh6WR+ErV419fXHL2+GKFOobRalcLk/k8ZRKJfyXy6W4ljCrowH7+N2jDwMRIVCqLJ9i9Lefndg31FmREl2tNgHdbtfglEhCVF2Qk5Lf2HH10u4XJTHL/kno6mulGWuKjn39629PHt/oTGuqjKNUmZlWfvjxk/e/ni4+VqSPCGmD0S6zfFavjzUYdN/98uHV7osTZfvWTetM2dmLPa/Of/judZshNioQKpz/Rt/H5pam3t5VfHp3Tc3JGtDoxls7b4fpdQYg/rdan2DI1ZWWtur1+k3w19paqss1GBK++KzP+qzP+qz/nf4GWeL9vQi7jMAAAAAASUVORK5CYII=")
bitmaps["pBMinspire"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAMAAAAOusbgAAAAkFBMVEX19hb///////v19hv///f///D29yr29yX///T39y/3+Dn3+DT29yD7/KL+/uH9/tD3+D7+/ub8/LX9/cD19h3+/ur3+ET//+3+/tb6+oL4+VX4+U/+/tz6+4f6+5P5+m74+Er9/cv8/bn7/J36+nr4+V78/Kz8/Kj9/cb7+5j6+435+nb5+WP5+Wf8/LD4+VoR+OGYAAAEV0lEQVRo3sXbZ3PiMBCA4d2V5F4wLtimmd7h//+74y650yXEFNkWz2dmXm9mR6MJBlSxzE8H54qBbtncIuSzUnfZ8AmvaO6CXqsI/xBTvSObG8IPcxt0KgP8lJ5AI3NB+In6BugzHOE/0YqBLt6OyzBt9I2c5fif4AKaJGP+f5h8E/TohfjFaAhaJIX1Ncx3HujgbPGbvAIN2FJ8D/O9jpHdmPC7MIPOsekAb1hFAl2z+4S3Zg507ZTiD8SBQbeMM+FPYhe6dYnwR4MuLwTyxnOLOr4QlAHWSE9djmwueF2YzgZ0pxphrWgFnfEmvD5MGxO6kuV4R1BCR5KxdS9Mi25GlhcASc+FgC2t+2E+8aALzpbwvjyDDrCDwAf4PoH2uTE+FPZA6u4C0PWFQF4AHts6rQ98TPEJYsnazXrOmZ4J0zYzWSvFxLR75XTsxwKfYm03+8Oqcg0vYapJw6lWh8k6ziPBCZ9GXKRB2PfH0zJzjRfyzPscch6OUk6EaohENJr1F8W07Nmmx+4VmVc/pHKeiyiP15PlcXjtM1Y7ZDCQxRYRHwR/+qvKMT7Xj9nlx5DWw79r8/EtEYRzvyjNa3fYjyxCnYgHewOymFC/QQG+he8QQkT4DhYIfAsBMcd3mMFqhG+QHsBbRqid2BsAZpGiZmJnw5U51ly2rt0/DL0zi4UNnwydM1sLF0CWB6iJ5V+7krHXVOYb2dVRll3n5t480VDma9mVMyuW1btyZoGd4uce/MjedVrmfdnVVJbd2vKiszKfZwzquQsLJQ1dWfY7KVNcya6esuw+4rRfpu2QwWPuxtLalZwNb7U7k91H5TVvs1vKrsYyhbL7hN6Zt9W9yO5T5TXX25Xlfgtlyo8JwBvK+ZEpvVRDDbujU6L271qlkZt/S5GMm06s+IqI5yuFm3/HasTYUFAphXt507BQWmooo6ZhXiiFp6JpmBaeQpeNeeOw0lqbPmFTocpa2zE2FgwVwk7YPDw4KoSHUfOwpfDdCJNLrY52nuallqe11pNamrkKJ3Ub4aDSfFLL0/r1pQ7aCPPX1/ok2gjTLnl1qQveSrhvqL3kqn+tjTm2YlRpPamldKX7pJZr3fpSUzSyHn9o4rW91IP+sdrnDz92Nto9qUU8tRl41S548MGt++JSE97Bw6XD4Dfzsono7lpn7S01z/dZIp/x2B/cSQ9WbZ3UFCyGXxaGuYet1dYl5ChqV3lzMW9W0SnCujTfsTaWWsxPBoNbSTYZUc1pbTY/qcV26tY9vzdcBNT4tDb6P65y0WP3nvayTqlurdWXmkaTLHn0vKe5qDmtVZeaAn9oQo37C84PTPmkpvS8Mp5cy9445OqndWGhRCI+2fAEueBf0uvn15rtOf7DZ0uXwSvM0o9I6VLP5MQ8H8tVfj69Oqek8sORMvi7yrvKAwXMnsZC4ZVvcy8+jsfSBEXMXc4sRBS+DS+wxzlP+0cDGkh641kwK2oOrl/0pFxoYz+MkgAAAABJRU5ErkJggg==")
bitmaps["pBMjbshare"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMmelody"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMguiding"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMpopstar"] := Gdip_BitmapFromBase64("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")


; static buffs
bitmaps["pBMblessing"] := Gdip_BitmapFromBase64("")
bitmaps["pBMbloat"] := Gdip_BitmapFromBase64("")
bitmaps["pBMclock"] := Gdip_BitmapFromBase64("")
bitmaps["pBMmondo"] := Gdip_BitmapFromBase64("")
bitmaps["pBMtideblessing"] := Gdip_BitmapFromBase64("")

; planters
bitmaps["pBMUnknown"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMTimer"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAMAAACfWMssAAABgqjAAAAf3RSTlMAAQIDBAUGBwsMDxITFBUiJCYoKSotMDEyNjg6Oz9CQ0VHSEtOT1BSU1RVVldYWVteX2BiaWxtbnBydXd6e32Cg4WMjY6PkZKTmZqbn6GipKaqrLS3ury9vr/Bw8jKy9DR1NXW19jZ297g4uPl5ufo6e7v8PHz9PX3+fr7/P3+6QJidwAAAAFiS0dEAf8CLd4AAAyDSURBVHgBAXgMh/MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLDs7Ozs7OysBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4f39/f39/f384AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLf39/f39/f39KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUYn9/f39/f2ITAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZf39ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZf39ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARLj1rf39qOiMPAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEfSm9/f39/f39/f39/akUcAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMWJ/f39/f39/f39/f39/f39/YCYBAAAAAAAdGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpff39/f39/f39/f39/f39/f39/f39eGAAAAkx/fzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACP3x/f39/f39/f39/f39/f39/f39/f39/eTkETX9/f04AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlTf39/f39/f39/f39/f39/f39/f39/f39/f39qf39/eh4AAAAAAAAAAAAAAAAAAAAAAAAAAAAACFl/f39/f39/f39/f39/f39/f39/f39/f39/f39/f398LgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFV39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f38tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJf39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39IAAAAAAAAAAAAAAAAAAAAAAAAAAAAACd/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/JQAAAAAAAAAAAAAAAAAAAAAAAAAACnB/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/bAoAAAAAAAAAAAAAAAAAAAAAAAAAQn9/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f0EAAAAAAAAAAAAAAAAAAAAAAAANd39/f39/f39/f39/f39/f39/f39/f39/fTcJKHt/f39/f39/f3YLAAAAAAAAAAAAAAAAAAAAAAA8f39/f39/f39/f39/f39/f39/f39/f399MAAAAFV/f39/f39/f386AAAAAAAAAAAAAAAAAAAAAABkf39/f39/f39/f39/f39/f39/f39/f30wAAAAB2h/f39/f39/f39hAAAAAAAAAAAAAAAAAAAAABV/f39/f39/f39/f39/f39/f39/f39/fTAAAAAFUn9/f39/f39/f39/EgAAAAAAAAAAAAAAAAAAADZ/f39/f39/f39/f39/f39/f39/f399MQAAAANQf39/f39/f39/f39/NAAAAAAAAAAAAAAAAAAAAE9/f39/f39/f39/f39/f39/f39/cWwwAAAABVJ/f39/f39/f39/f39/TQAAAAAAAAAAAAAAAAAAAF1/f39/f39/f39/f39/f39/f2UbAAAAAAAFUn9/f39/f39/f39/f39/XAAAAAAAAAAAAAAAAAAAAG9/f39/f39/f39/f39/f39/dQ8AAAAAAAVSf39/f39/f39/f39/f39/bgAAAAAAAAAAAAAAAAAAAHd/f39/f39/f39/f39/f39/UQAAAAAAAD9/f39/f39/f39/f39/f39/dwAAAAAAAAAAAAAAAAAAAHx/f39/f39/f39/f39/f39/RAAAAAAAAEN/f39/f39/f39/f39/f39/ewAAAAAAAAAAAAAAAAAAAHN/f39/f39/f39/f39/f39/WgAAAAAAAFt/f39/f39/f39/f39/f39/cgAAAAAAAAAAAAAAAAAAAGl/f39/f39/f39/f39/f39/fyoAAAAAK39/f39/f39/f39/f39/f39/aAAAAAAAAAAAAAAAAAAAAFZ/f39/f39/f39/f39/f39/f3xHICBHfH9/f39/f39/f39/f39/f39/VQAAAAAAAAAAAAAAAAAAAEh/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/RgAAAAAAAAAAAAAAAAAAACt/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/JwAAAAAAAAAAAAAAAAAAAA58f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f397CwAAAAAAAAAAAAAAAAAAAABUf39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39TAAAAAAAAAAAAAAAAAAAAAAArf39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f38oAAAAAAAAAAAAAAAAAAAAAAADZn9/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f2cDAAAAAAAAAAAAAAAAAAAAAAAAL39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/fy0AAAAAAAAAAAAAAAAAAAAAAAAAAFh/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/WgEAAAAAAAAAAAAAAAAAAAAAAAAAABB0f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39yDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAApfn9/f39/f39/f39/f39/f39/f39/f39/f39/f39/f34nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANX9/f39/f39/f39/f39/f39/f39/f39/f39/f39/fzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1+f39/f39/f39/f39/f39/f39/f39/f39/f39+PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzeH9/f39/f39/f39/f39/f39/f39/f39/f3gyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF2V/f39/f39/f39/f39/f39/f39/f39/YxYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc+dn9/f39/f39/f39/f39/f39/f3U9BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUBuf39/f39/f39/f39/f39tPwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIkdhfH9/f39/f3xhRiEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhMeJCQeEwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzQaSBzyAU4AAAAABJRU5ErkJggg==")
bitmaps["pBMBlueClayPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMCandyPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMFestivePlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMHeatTreatedPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMHydroponicPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMPaperPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMPesticidePlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMPetalPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMPlanterOfPlenty"] := Gdip_BitmapFromBase64("")
bitmaps["pBMPlasticPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMRedClayPlanter"] := Gdip_BitmapFromBase64("")
bitmaps["pBMTackyPlanter"] := Gdip_BitmapFromBase64("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")
bitmaps["pBMTicketPlanter"] := Gdip_BitmapFromBase64("")

; nectars
bitmaps["pBMComforting"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAkFBMVEUAAADD5v+w2vmw2/mw2/my5v+v2/my3/+v2/iw2vmw2/iw2/mw2/m23/+44v+w2/mw2/mw3Pix3vqw2/mw2/mw3Pmx3Pmz3vq03v+w2/mw2/mw2/ix3Pqx3Pix3Pu03/+w2/iw3Pqx3Pmx3Pmx3Pu03vm76f+w2vmw2/iw2/mw2/mw2/qw3Pqw2/my3fuv2vkne52EAAAAL3RSTlMAB/v38A36Id705dPJFxLYppYug31vVjUet6qaXU1BG8GPd1BIJwvsvLGfjGaJOy8Vi5UAAAH9SURBVFjD7dfnkqMwDABgGUyvoYcESO+J3v/tbnbnbm42kbEY/u73Xx5bxQb4pXFq+uKWtum96h1rcrQ47i7Sxm+GbSa3MhMTwqOulfjGW+6Z+7D6hWsjwd4cBGPvh4uJKrLUrmDtJI4wF5Hm8Csbx22csXhniVphMxK/QYbQUe5/iSxXocjfSh1jSzcIfClN46sj6C2IQpU/Gd73x8iy4qGp1ysfE7qh9h4d7j9r8SNR5YuMbxK68GkGPDkZ71bcEXJ8smIZcOWaiuvELhGfHIFtbXzGex0/XlA92IoJN5AkCtjBvBMk8YQTXPHTAviGMzE+D+A7EGMk+5kp8I/AV1JdFAHfjlggiIEvn7vAnRrkAfgWxALnDPhS6iqqgO+KMzuRvM+TZl4V0CyBbU++CAH/QrN88jXanoAk9hlRR/7nRLOVwfvb1NOv2rn4bMdoHdrovi9guUgyl4cfxxBZEX69gJuPrW1R4dxWjiW+g+O6vPqGokdqE1U8d5Nu8+LZBvLftWE8PhOb4ijDMPA/nyjw4CKbkQOhM5ErGTQzreFVinZcMg9wE0CLbwYyBOopPRWMPLg1qIlKWwv/BaOyy/gxwlo72YU3kv/VAFqiT6Visi4HASzZM5TGe7Sfdqcpv1zrrWv+XcT2gnb3imCquK4ej919lXeOgF9KfwAh9QdWpNjfcQAAAABJRU5ErkJggg==")
bitmaps["pBMInvigorating"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAk1BMVEUAAAD/jY35fHH5fXL5fHH/h3n/g3f/gnn5fHH4fHL/gnT5fXL6fXL5fXL7f3P7fnP4fXL5fXH5fXL5fXP5fHL/gn34fXL5fHH5fXH4fXL5fXL5fXX5fHL5fHL6fXL6fnP6f3P5fXT/gXb4fXH4fXL5fXH5fXH6fXL6fXL4fXL5fXL6fnT4fXL7f3P/g3T4fXL5fHEC1AEuAAAAMHRSTlMABfr37wkVEPPBHMyJWkM36NWlgnkN5NCxcFMmxp+QXkkqIeDcrqtqZJd1Mrg/GrqIU/1NAAACmklEQVRYw82W2XqCMBCFybBIAQXEBWtdcG3det7/6SowopiA8nHT/26+6GHmZCaJ9t8R+4loJTAd2U4rAV/Xe60EPgmHVgJzYCfaeNgH1sMWAp0xYExbCKx0wPBbCPQIsNtsQwRA77bwcAeAonvc2MMAV35NDi+7bkMJ38aVUVL0dbAw38o84a2fIIX2Wo7pwn5ntjqHzerWRhmxycJfQPB6T5yYtiL/4gcyQocF0vi3o9VzdAGPUwmREfgsME939fNF74UA8W+SABl04MIXBOCjdjaSNEudU/4m5Hxx2l16lYKVVW1fbh4yxrEQqE+Bv7mxcjdDMLQoBOp723KRMs4z7tm40RfsQV6RVZ8A5ygiFIzyxvDySP+uPD7Ys2EWcRdw1twHtSns2fV1tu4buPMj0i1e3/TOtQkguwrEAA+s03NtSWAioTzCdeRQmvDFxQM0uUrOivAkD2VpPUonkTgoyp4GRWSsVHuYV8BHiOOihL7MP3BvjDJl08izPEKZWU8ytUQ5Z/1k4AnDfoxG8pVrxmgAyb3kbNCEvlAcoE1wJYEloQljSaDbVmBPLUsYoJ2JwkMTaC9NwhwKyI372xAytv+eQN8SQiQKBcPU3vHAPlZVZygfdBLhMG8RXV6RBRKj0uokwDM/ssBwCwk+uS7SmCifr0s5hcHtXSAtqC4nc1YlIGLJQiXHdZXAVnJAiYgIZeZCKTBaVd/NZXYssJMdVHMeocTJVAl4olJAfBtKgZK9rqVVYw5KClsu4Qd3NvVvb3PxWMVMSIM2Pmv1iPMX3at9HjSKp9pLnHkA5vB03AVRR3sDcfTC/B+T0r1NHz2hvYdwurFB2Z1ezDNtDpbWAHP6GcWLYs70tTcVWlPE7S9Wz+8I7b/yB0fzC6SJbr9CAAAAAElFTkSuQmCC")
bitmaps["pBMMotivating"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAllBMVEUAAADatf/Jpu3Jp+3LqvLPru/Ip+zJp+3Jp+zMqu/Jp+3Jp+3Jp+3Kp+7Oq/TJpu3Jp+3Jp+3Jpu3Jp+3Jp+3KqO7Lqu7MrPDJpu3Jp+3LqO7PtvnJp+zKqPDKqfDMqe7QrfLJp+zJp+3Kp+3KqO3KqO/Jp+3Jp+7IpuzJp+3Jp+3KqO7IpuzJp+7JqO7Jp+3MqO7IpuzcI6R9AAAAMXRSTlMACPP7Jg/349wc0MO2WBbXyvnfoZU8KSDtmkgM6kExLBLnjHFgTLx427KqZ+mCUWw21tfBtQAAAoFJREFUWMPlldeyo0AMRBmGnJMBA8YGnOPV///cki7G9sBA+WVr9zxSqEtq0YL5m0EVcRyjkvnVgX7z3JNWcTq73k3354jIu1xhMfTA7NFdoanlDzXE8Il42Ewp5+97AciwuUGvX7shDCKc17T6HxXDCNiKxuu5PVA47kbnX9pAw/JHBPQQqNi34W0ae5jAMR0U2LIwAbzkKQ3QuA5tImJhGt6ACx5MRJHJE1gwkWxBFFgkMBHhQhS4YHghPJ3C3xxa9gQTlm/Re8To0thq3uX8JaEqKddIhT52zpfPatGwXNvG7ffnBCQBBfqoch1uE4CtJw76+iHJxfhFIGxDdz+CGzdBl3rj3UlJ7AvgzqZdl76L8BTQaQJi2k3GdS+4+ClA82BJ2pNvdgIRScD6SOyqNYJDb2m9puPfAS6acB2lqF6Aprc+n6HBNIjXoBvR5Oo6C0BJy9ZyQWmN0FsfXTSeBbe5j5Wg9pMe2O6G3BsBdsuQiPe/ExwqS8q6iiTBVUmBeh04A3e1EJ5ZQfr19Qpd0FNAiwdO2gkaxMeqcN5vwCHg180LwpYZYGH+7jkRPo+AaUlNqC2ZGULPgI5dMGRa56hYwVf/tucOyXAqUDjzzCg7EUaRCDGYY4NQMDQMd8iGdoVUfKINz0tCJxIpDtJA7U8AY2zbNpuJNY4jmeqCmQSXLz3Py2/FVt9Fi3Rd4fs+x8nM/4Rh8BtDDvz0Z1GyqpnjgKwqlqKYpiSKWXZNkiRMwmw7R0CCTx7fChQzBALSx3ib04FJENjHM5ZACpS0+VIgmyGw0QgCzgwB5BEEXMRMZ3fW9pqmmlKJUyEpWsTMAfEbnjcCrsLnSgKe+Vf5A0jPGTYJYry9AAAAAElFTkSuQmCC")
bitmaps["pBMRefreshing"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAjVBMVEUAAACo+aOo+aO9/720/7Sv/6mo+KKo+KOo+aOq+aWq/6m3/6eo+aOo+aOn+aKn+aOu/6ao+aOo+aOo+aOo+aOn+KOo+aSq/qWp/6So+KKo+aOo+qSp+aSp+6Wn+KOo+aOn+aOo+KOo+qOo+aOo+6Sq+qWw/6Wo+aOo+qOp+6Wo+aOr+qap+6So+aOn+aJaflyzAAAALnRSTlMA+vYFCBDgvdcoHAvbz8muFcR0b/DrfSMg5YNnUTrptKCXi1k+MBenYEaTNEKd6vo8CwAAAmRJREFUWMO1lul2qjAUhTMwCTIJKFpRQZw6nPd/vHslaRPSQiBd/X6yFjsnZ8g+aJysOaPfYBMg/m8EXgAgQ+YERwBwbXOBxQEAtm/mAhkGALw2T6ELTyLjNLZ5J0DuyAz6Cgw3MUyhAwzyYhbAGgMnLE0ESg8+wWvjADhLgyxsPBDg3XyBHQaJYjO7BEvoERsGQMI0Z5d4NyqB90jsKoInqTVLYIW7/yv0n2rbhTCrof1Q6kAas24K5rxEhFVfDofs0WSu7NpHfu0zZlmwZwYAcV8AZ5MzEPEx5gINMJyp3ZQR/oMtktjRTOyBEBjkwTISAme7mDmGr92HB4GvDxTpuYgpcMqnYANfHCY88VaNxRRn7GUTnPQN/TiAILW6NhIUrdYLjiCRvyMrBpgTwp6AjOuvcpApNGMdxNADLwn0+bDGS1CABo3X7kBLPRQCbzoth2pyClX07RjcQIGcbt80l4vhFB5AIQ3sE4Y+eDU4RsJMJF/2lbyMbE2JBwqRzRadPk45NAbkx2B9oat5mdbqUcWlu1k9UYB+gIJr8eJOEwjkQZTNyFeM1vMHJjlSe87noblKapOBImzVjgmEVcvcggEBBwQ9Q773BMiKDuTAhT4nioQ1CZwW6csoeaPaSvh2HVxrRBKEM3FrEhRnOm0WhKGXchlx7OtWO0FaMrOWdZ091W02skJrW1YrB0Ca0S0hUQuRp7e46F1A469vIYyB3QppqMYUyLGl+hX1lA9aQn2ZYu/B3iU/Hu/er1OXtMzDoECi1cKasWrXRb8Y0foSoDlQO6maiO/ZXn3eWMgEStHf8w/NNugFDcEO/AAAAABJRU5ErkJggg==")
bitmaps["pBMSatisfying"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAqFBMVEUAAAD50+j51Of/////2//51Oj/1+v51Oj/5v341Of51Oj/3ez51Oj61ur51Oj51Oj71er71Oj51+z/3+/51Of40+j51Oj51Oj61ej71un41Oj41Oj51Oj/1+r/2Ov/1+v/1/L51Oj41Oj41Oj51ej61On51Oj61On51un51Oj61en51ej71er51Oj51ej41Oj71ur61ur51Oj51ej61ej51Oj51Oj50+cLW9dDAAAAN3RSTlMA/PkEB/UM8gninxbKLsJ0R0AoD+zq2oBrN+Xe1iIeGRLRvJuUirVdUKtlVDuvpm89NIV6YVjv1FflqgAAA0FJREFUWMPdV+t6ojAQdVDkUm6CCiIgeL/WWrV5/zfb7RpCMiFb21/77fnXjjOZc3JmjJ3/G90yP2791er4s/TI3dtOamgAzuT72f1LYmcfQP5AW5nfTH+576YaEArwLvT/Ydh9ivrkZBAO44AGci87l1/nz5IK+PzRvvcIlAuNGIviq+OPJ53wMOI+leU6/NRjffm7eLcMhHzNfqGV96OHIs7gL0JE/oiIcFwaepsSimqgzO8lQ5Q/2tQXc4KmqJJFwE5hBCJKwOeUgXnenh96KB8YgYEl1i1bBVgCKmBtawJzMWDcWoTsbrAAemxSbVYaClVhC4GKhTHVYERwLO7hfFM6xTrUpR0iYfqGCwxSFYH+AogEsPtIwR3+xLqg2iQGaUGK7LQdYgIBtiBuIRIaWGMLLWmLxZy0IxX21BHrPKbhaKEpCmg+74F3wA2YdAY/iALwysk4cxQNTDKihJNzDAzUwHsP36AMi7PCFVADF3o3I6LG8NDsgdd2l/R3n38Y1nTY1oiRNGvcQybc08BmnNrngxtu7RYt9TMbSddCzQX17cxm5uOId0Mu4PfYHOhokQXyst+BTIEVCDQUunckDMaSiM1WuaHqQH3Mo/euYS9vWTAGaRXIK2uChyp7UxqZQCWrUOKpmoesQAxEqnCIur8j3Z5p1ivLRm5dvLDie9knkL6e9/71Gi9XJRVhiZQ+m43CbSMLuq6BpoFHDzIXyO7cSsotogTE3VYN4FRwVyTsI4Wp3KnIwOev2ldPrVdLlYh2rYS9HmIR5ImJdugOZsK7olI2ULQzsO7iV9NGwWG4YSx1UcIcPW08xeIs62mci9ImzATICvjbhbX4IX5thdKwiRrhqSzEDtOb/HZ1hyyMljt74TDo6LWo8oLBdpZbCY15rS+9yJMUpB5CLxTINpQZQp5JT0SKy5jPHye0sAR3hF5YFOZS489n+TLuBifAtdm5FmdhZ1N21Nha7KAdO2e2hkb/dYD4IwycemNOGIFYb5xtT2hfSriP44yky3ilrCsrLp74vbGy6A1iD+rzQ/TcLx47PYXNmNnwOH4a550nYbr8sjh+dqRnyyNm/3S51dixD7nZ+THKsOh1/mH8At2tdh4Kz42QAAAAAElFTkSuQmCC")

; other
bitmaps["pBMNatroLogo"] := Gdip_BitmapFromBase64("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")
#Include "%A_ScriptDir%\..\nm_image_assets\offset\bitmaps.ahk"



; ▰▰▰▰▰▰▰▰▰▰▰▰
; INITIALISE VARIABLES
; ▰▰▰▰▰▰▰▰▰▰▰▰

; GLOBAL VARIABLE DECLARATIONS
; Initialize missing global variables to fix compilation errors
global buff_colors := Map()
global latest_boost := Map()
global latest_winds := Map()
global windowX := 0
global windowY := 0
global windowWidth := 0
global windowHeight := 0
global regions := Map()
global stat_regions := Map()
global backpack_values := Map()
global status_changes := Map()
global start_time := A_Now
global stats := []
global graph_regions := Map()
global pBM := 0
global start_honey := 0

; Field names for gather configuration
global FieldName1 := ""
global FieldName2 := ""
global FieldName3 := ""

; Planter variables
global PlanterName1 := ""
global PlanterName2 := ""
global PlanterName3 := ""
global PlanterField1 := ""
global PlanterField2 := ""
global PlanterField3 := ""

; Hotkey variables
global HotkeyWhile2 := ""
global HotkeyWhile3 := ""
global HotkeyWhile4 := ""
global HotkeyWhile5 := ""
global HotkeyWhile6 := ""
global HotkeyWhile7 := ""

; Configuration variables
global consumables := ""
global PlanterMode := 0
global MaxAllowedPlanters := 0
global HiveSlot := ""
global natro_version := ""
global os_version := ""

; Additional variables for statistics
global Gather_time := 0
global Convert_time := 0
global Other_time := 0
global honey_average := 0
global honey_earned := 0
global start_time_formatted := ""


; OCR TEST
; check that classes needed for OCR function exist and can be created
ocr_enabled := 1
ocr_language := ""
for k,v in Map("Windows.Globalization.Language","{9B0252AC-0C27-44F8-B792-9793FB66C63E}", "Windows.Graphics.Imaging.BitmapDecoder","{438CCB26-BCEF-4E95-BAD6-23A822E58D01}", "Windows.Media.Ocr.OcrEngine","{5BFFA85A-3384-3540-9940-699120D428A8}")
{
	CreateHString(k, &hString)
	GUID := Buffer(16), DllCall("ole32\CLSIDFromString", "WStr", v, "Ptr", GUID)
	result := DllCall("Combase.dll\RoGetActivationFactory", "Ptr", hString, "Ptr", GUID, "PtrP", &pClass:=0)
	DeleteHString(hString)
	if (result != 0)
	{
		ocr_enabled := 0
		break
	}
}
if (ocr_enabled = 1)
{
	list := ocr("ShowAvailableLanguages")
	for lang in ["ko","en-"] ; priority list
	{
		Loop Parse list, "`n", "`r"
		{
			if (InStr(A_LoopField, lang) = 1)
			{
				ocr_language := A_LoopField
				break 2
			}
		}
	}
	if (ocr_language = "")
		if ((ocr_language := SubStr(list, 1, InStr(list, "`n")-1)) = "")
			msgbox "No OCR supporting languages are installed on your system! Please follow the Knowledge Base guide to install a supported language as a secondary language on Windows.", "WARNING!!", 0x1030
}


; HONEY MONITORING
; honey_values format: (A_Min):value
honey_values := Map()

; obtain start honey
start_honey := ocr_enabled ? DetectHoney() : 0

; honey_12h format: (minutes DIV 4):value
honey_12h := Map()
honey_12h[180] := start_honey


; BUFF MONITORING
; buff_values format: buff:{time_coefficient:value}
(buff_values := Map()).CaseSense := 0
for v in ["haste","melody","redboost","blueboost","whiteboost","focus","bombcombo","balloonaura","clock","jbshare","babylove","inspire","bear","pollenmark","honeymark","festivemark","popstar","comforting","motivating","satisfying","refreshing","invigorating","blessing","bloat","guiding","mondo","reindeerfetch","tideblessing"]
	buff_values[v] := Map()

; buff_characters format: character:pBM
buff_characters := Map()
buff_characters[0] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAAAAAC2kKDSAAAAAnRSTlMAAHaTzTgAAAA9SURBVHgBATIAzf8BAADzAAAA8wAAAAAAAAAA8wAAAAIAAAAAAgAAAAACAAAAAAAAAAAAAADzAAABAADzAIAxBMg7bpCUAAAAAElFTkSuQmCC")
buff_characters[1] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAIAAAAMCAAAAABt1zOIAAAAAnRSTlMAAHaTzTgAAAACYktHRAD/h4/MvwAAABZJREFUeAFjYPjM+JmBgeEzEwMDLgQAWo0C7U3u8hAAAAAASUVORK5CYII=")
buff_characters[2] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAALCAAAAAB9zHN3AAAAAnRSTlMAAHaTzTgAAABCSURBVHgBATcAyP8BAPMAAADzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMAAADzAAAA8wAAAPMAAAAB8wAAAAIAAAAAtc8GqohTl5oAAAAASUVORK5CYII=")
buff_characters[3] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAAAAAC2kKDSAAAAAnRSTlMAAHaTzTgAAAA9SURBVHgBATIAzf8BAPMAAAAAAAAAAAAAAAAAAAAAAAAAAADzAAAAAAAAAAAAAAAAAAAAAPMAAAABAPMAAFILA8/B68+8AAAAAElFTkSuQmCC")
buff_characters[4] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAAGCAAAAADBUmCpAAAAAnRSTlMAAHaTzTgAAAApSURBVHgBAR4A4f8AAAAA8wAAAAAAAAAA8wAAAPMAAALzAAAAAfMAAABBtgTDARckPAAAAABJRU5ErkJggg==")
buff_characters[5] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAALCAAAAAB9zHN3AAAAAnRSTlMAAHaTzTgAAABCSURBVHgBATcAyP8B8wAAAAIAAAAAAPMAAAACAAAAAAHzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHzAAAAgmID1KbRt+YAAAAASUVORK5CYII=")
buff_characters[6] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAAJCAAAAAAwBNJ8AAAAAnRSTlMAAHaTzTgAAAA4SURBVHgBAS0A0v8AAAAA8wAAAPMAAADzAAACAAAAAAEA8wAAAPPzAAAA8wAAAAAA8wAAAQAA8wC5oAiQ09KYngAAAABJRU5ErkJggg==")
buff_characters[7] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAAMCAAAAABgyUPPAAAAAnRSTlMAAHaTzTgAAABHSURBVHgBATwAw/8B8wAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8wIAAAAAAgAAAABDdgHu70cIeQAAAABJRU5ErkJggg==")
buff_characters[8] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAAAAAC2kKDSAAAAAnRSTlMAAHaTzTgAAAA9SURBVHgBATIAzf8BAADzAAAA8wAAAgAAAAABAPMAAAEAAPMAAADzAAAAAAAAAADzAAAAAADzAAABAADzALv5B59oKTe0AAAAAElFTkSuQmCC")
buff_characters[9] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAAAAAC2kKDSAAAAAnRSTlMAAHaTzTgAAAA9SURBVHgBATIAzf8BAADzAAAA8wAAAPMAAAAAAPMAAAEAAPMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA87TcBbXcfy3eAAAAAElFTkSuQmCC")

; buff_bitmaps format: pBMBuff:pBM
;0xffe81a06:"flames",0xfff99d27:"tabby",0xff86ebff:"polar"
(buff_bitmaps := Map()).CaseSense := 0
buff_bitmaps["pBMHaste"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMHaste"]), Gdip_GraphicsClear(pGraphics, 0xfff0f0f0), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMBoost"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMBoost"]), Gdip_GraphicsClear(pGraphics, 0xff90ff8e), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMFocus"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMFocus"]), Gdip_GraphicsClear(pGraphics, 0xff22ff06), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMBombCombo"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMBombCombo"]), Gdip_GraphicsClear(pGraphics, 0xff272727), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMBalloonAura"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMBalloonAura"]), Gdip_GraphicsClear(pGraphics, 0xfffafd38), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMClock"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMClock"]), Gdip_GraphicsClear(pGraphics, 0xffe2ac35), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMJBShare"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMJBShare"]), Gdip_GraphicsClear(pGraphics, 0xfff9ccff), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMBabyLove"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMBabyLove"]), Gdip_GraphicsClear(pGraphics, 0xff8de4f3), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMPrecision"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMPrecision"]), Gdip_GraphicsClear(pGraphics, 0xff8f4eb4), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMInspire"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMInspire"]), Gdip_GraphicsClear(pGraphics, 0xfff4ef14), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMReindeerFetch"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMReindeerFetch"]), Gdip_GraphicsClear(pGraphics, 0xffcc2c2c), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMScience"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMScience"]), Gdip_GraphicsClear(pGraphics, 0xfff4a90d), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMBloat"] := Gdip_CreateBitmap(4,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMBloat"]), Gdip_GraphicsClear(pGraphics, 0xff4880cc), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMComforting"] := Gdip_CreateBitmap(3,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMComforting"]), Gdip_GraphicsClear(pGraphics, 0xff7e9eb3), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMMotivating"] := Gdip_CreateBitmap(3,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMMotivating"]), Gdip_GraphicsClear(pGraphics, 0xff937db3), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMSatisfying"] := Gdip_CreateBitmap(3,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMSatisfying"]), Gdip_GraphicsClear(pGraphics, 0xffb398a7), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMRefreshing"] := Gdip_CreateBitmap(3,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMRefreshing"]), Gdip_GraphicsClear(pGraphics, 0xff78b375), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMInvigorating"] := Gdip_CreateBitmap(3,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMInvigorating"]), Gdip_GraphicsClear(pGraphics, 0xffb35951), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMMark"] := Gdip_CreateBitmap(5,1)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMMark"]), Gdip_GraphicsClear(pGraphics, 0xff3d713b), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMMelody"] := Gdip_CreateBitmap(3,2)
pGraphics := Gdip_GraphicsFromImage(buff_bitmaps["pBMMelody"]), Gdip_GraphicsClear(pGraphics, 0xff242424), Gdip_DeleteGraphics(pGraphics)
buff_bitmaps["pBMTideBlessing"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAABAAAAALAgMAAAALjOWqAAAACVBMVEUAAACRwv3z8/MeJ4W2AAAAAXRSTlMAQObYZgAAAEJJREFUeAEBNwDI/wAAAACAAAAAAIAAAAAAgAAAAACAAAAgAIAAAAgAgAAAAACAAAAAAIAAAAAAgAAAAAAAAFVVVVWUCQX9+4UpmQAAAABJRU5ErkJggg==")
buff_bitmaps["pBMMondo"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAACYAAAARCAMAAACGnC6JAAAAOVBMVEUAAAC+oq30w1L0w1HzxFbzxFXzxFnwx2rvyW/szIHn0Jnl0aTg1rvg1rzc2tHc2tLa29vZ3OHZ3OLV3/OdAAAAAXRSTlMAQObYZgAAAqJJREFUeAEBlwJo/QAAAAAAAAAAAAMCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcJCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsMCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABERDgbbRAQaOZh5MAAAAAElFTkSuQmCC")
buff_bitmaps["pBMFestiveMark"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAsAAAABBAMAAAD6GUlzAAAAIVBMVEU7QDNvQzmtSDmySTizSTm2STi4STi5STi5TDsyWDA9cTvalFRvAAAAEklEQVR4AQEHAPj/AKkBh0I2UAegAfr1a/UAAAAAAElFTkSuQmCC")
buff_bitmaps["pBMHoneyMark"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAkAAAAEBAMAAACuIQj9AAAAMFBMVEUcJhYXKxsXKxwZLx0xNRc0YDI1YTM4ZzZ3axp8cBs9cTueih2vlx7WtiDYtyHsxyJxibSYAAAAI0lEQVR4AQEYAOf/AKqqcwvwAKqqUZ7wAKqqUY3wAKqqYkzwjf0MCuMjsQoAAAAASUVORK5CYII=")
buff_bitmaps["pBMPollenMark"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAoAAAAFCAMAAABLuo1aAAAAQlBMVEUPHBYRHRcUIhgUJRoaMB0pMiQcNSAuNyYfOSI5QCwnSChdYD81YzQ2ZDQ5ajg8bjo8cDo9cTuEglSknWS9tHLk1YZKij78AAAAQklEQVR4AQE3AMj/ABERERERDggCCxQAERERERERDAYABQAREREREREPCgMBABEREREREAoDBxIAERERERENBAkTFUoXAq+Dil5HAAAAAElFTkSuQmCC")
buff_bitmaps["pBMGuiding"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAwAAAACCAMAAABboc2lAAAAOVBMVEWPf02QgE6RgE+SgU/SuHDTunHUunHhxnjhx3niyHrjyXvky3zn0oPp1ITq1obq2Yju4o7u44/v5JDO0m0EAAAAJUlEQVR4AQEaAOX/ABIQDAgEAwEECQ0REgASDgoHBQACBgcLDxIMQwDt+rZJwwAAAABJRU5ErkJggg==")
buff_bitmaps["pBMBearBrown"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAAwAAAABBAMAAAAYxVIKAAAAD1BMVEUwLi1STEihfVWzpZbQvKTt7OCuAAAAEklEQVR4AQEHAPj/ACJDEAE0IgLvAM1oKEJeAAAAAElFTkSuQmCC")
buff_bitmaps["pBMBearBlack"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAA4AAAABBAMAAAAcMII3AAAAFVBMVEUwLi1TTD9lbHNmbXN5enW5oXHQuYJDhTsuAAAAE0lEQVR4AQEIAPf/ACNGUQAVZDIFbwFmjB55HwAAAABJRU5ErkJggg==")
buff_bitmaps["pBMBearPanda"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAABAAAAABBAMAAAAlVzNsAAAAGFBMVEUwLi1VU1G9u7m/vLXAvbbPzcXg3dfq6OXkYMPeAAAAFElEQVR4AQEJAPb/AENWchABJ2U0CO4B3TmcTKkAAAAASUVORK5CYII=")
buff_bitmaps["pBMBearPolar"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAA4AAAABBAMAAAAcMII3AAAAElBMVEUwLi1JSUqOlZy0vMbY2dnc3NtuftTJAAAAE0lEQVR4AQEIAPf/AFVDIQASNFUFhQFVdZ1AegAAAABJRU5ErkJggg==")
buff_bitmaps["pBMBearGummy"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAA4AAAABBAMAAAAcMII3AAAAFVBMVEWYprGDrKWisd+hst+ctNtFyJ4xz5uqDngAAAAAE0lEQVR4AQEIAPf/ACNAFWZRBDIFqwFmOuySwwAAAABJRU5ErkJggg==")
buff_bitmaps["pBMBearScience"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAA4AAAABBAMAAAAcMII3AAAAFVBMVEUwLi1TTD+zjUy0jky8l1W5oXHevny+g95vAAAAE0lEQVR4AQEIAPf/ACNGUQAVZDIFbwFmjB55HwAAAABJRU5ErkJggg==")
buff_bitmaps["pBMBearMother"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAABAAAAABBAMAAAAlVzNsAAAAJFBMVEVBNRlDNxtTRid8b0avoG69r22+sG7Qw4PRw4Te0Jbk153m2Z5VNHxxAAAAFElEQVR4AQEJAPb/AFVouTECSnZVDPsCv+2QpmwAAAAASUVORK5CYII=")
buff_bitmaps["pBMBlessing"] := Gdip_BitmapFromBase64("iVBORw0KGgoAAAANSUhEUgAAAA4AAAAMAgMAAAAv7mRJAAAACVBMVEUAAADIyjzz8/PLJx4rAAAAAXRSTlMAQObYZgAAAEdJREFUeAEBPADD/wAAgAAAAAAAgAAAACIAAAAACAAAAAAIAAAAACIAAAAAAIAAAACAAAAAAgAgAAAAAAAAAAAAAAAAVVVVUGMZA8YHWu2lAAAAAElFTkSuQmCC")


; INFO FROM MAIN SCRIPT
; status_changes format: (A_Min*60+A_Sec+1):status_number (0 = other, 1 = gathering, 2 = converting)
status_changes := Map()

; stats format: number:[string, value]
stats := [["Total Boss Kills",0],["Total Vic Kills",0],["Total Bug Kills",0],["Total Planters",0],["Quests Done",0],["Disconnects",0]]

; backpack_values format: A_Min*60+A_Sec:percent
backpack_values := Map()

; enable receiving of messages
OnMessage(0x5554, SetStatus, 255)
OnMessage(0x5555, IncrementStat, 255)
OnMessage(0x5556, SetAbility, 255)
OnMessage(0x5557, SetBackpack, 255)



; ▰▰▰▰▰▰▰▰
; STARTUP REPORT
; ▰▰▰▰▰▰▰▰


; OBTAIN DATA
; detect OS version
os_version := "cant detect os"
for objItem in ComObjGet("winmgmts:").ExecQuery("SELECT * FROM Win32_OperatingSystem")
	os_version := Trim(StrReplace(StrReplace(StrReplace(StrReplace(objItem.Caption, "Microsoft"), "Майкрософт"), "مايكروسوفت"), "微软"))

; obtain natro version and other options (if exist)
if ((A_Args.Length > 0) && (natro_version := A_Args[1]))
{
	; read information from settings\nm_config.ini
	Loop 3
		FieldName%A_Index% := IniRead("settings\nm_config.ini", "Gather", "FieldName" A_Index, "N/A")
	HiveSlot := IniRead("settings\nm_config.ini", "Settings", "HiveSlot", "N/A")

	global HotkeyWhile2, HotkeyWhile3, HotkeyWhile4, HotkeyWhile5, HotkeyWhile6, HotkeyWhile7
	Loop 6
	{
		i := A_Index+1
		HotkeyWhile%i% := IniRead("settings\nm_config.ini", "Boost", "HotkeyWhile" i, "Never")
		consumables .= (HotkeyWhile%i% != "Never") ? (((StrLen(consumables) = 0) ? "" : ", " ) . "#" . i) : ""
	}

	PlanterMode := IniRead("settings\nm_config.ini", "Planters", "PlanterMode", 0)
	MaxAllowedPlanters := IniRead("settings\nm_config.ini", "Planters", "MaxAllowedPlanters", 0)
}

; FORM MESSAGE
message := "Hourly Reports will start sending in **" DurationFromSeconds(60*(59-A_Min)+(60-A_Sec), "m'm 's's'") "**\n"
	. "Version: **StatMonitor v" version "**\n"
	. "Detected OS: **" os_version "**\n"
	. (ocr_enabled ? "OCR Status: **Enabled (" ocr_language ")**\nCurrent Honey: **" (start_honey ? FormatNumber(start_honey) : "N/A") "**"
		: "OCR Status: **Disabled**\n**Honey Graphs will be empty.**")

message .= (IsSet(natro_version) ? "\n\nMacro: **Natro v" natro_version "**\n"
	. "Gather Fields: **" FieldName1 ", " FieldName2 ", " FieldName3 "**\n"
	. "Consumables: **" ((StrLen(consumables) = 0) ? "None" : consumables) "**\n"
	. "Planters: **" ((PlanterMode = 2) ? ("ON (" MaxAllowedPlanters " Planters)") : (PlanterMode = 1) ? ("ON (MANUAL)") : "OFF") "**\n"
	. "Hive Slot: **" HiveSlot "**"
	: "")


; SEND STARTUP REPORT
; create postdata
postdata :=
(
'
{
	"embeds": [{
		"title": "[' A_Hour ':' A_Min ':' A_Sec '] Startup Report",
		"description": "' message '",
		"color": "14052794"
	}]
}
'
)

; post to status
Send_WM_COPYDATA(postdata, "Status.ahk ahk_class AutoHotkey")



; ▰▰▰▰▰▰▰▰▰
; CREATE TEMPLATE
; ▰▰▰▰▰▰▰▰▰


; DRAW REGIONS
; draw background (fill with rounded dark grey rectangle)
pBrush := Gdip_BrushCreateSolid(0xff121212), Gdip_FillRoundedRectangle(G, pBrush, -1, -1, w+1, h+1, 60), Gdip_DeleteBrush(pBrush)

; regions format: region_name:[x,y,w,h]
regions := Map("honey/sec", [120,120,4080,1080]
	, "stats", [w-1560-120,120,1560,h-240]
	, "backpack", [120,240+1080,4080,678]
	, "buffs", [120,360+1758,4080,h-480-1758])

stat_regions := Map("lasthour", [regions["stats"][1]+100,regions["stats"][2]+100,regions["stats"][3]-200,1206]
	, "session", [regions["stats"][1]+100,regions["stats"][2]+1406,regions["stats"][3]-200,1289]
	, "buffs", [regions["stats"][1]+100,regions["stats"][2]+2795,regions["stats"][3]-200,720]
	, "planters", [regions["stats"][1]+100,regions["stats"][2]+3615,regions["stats"][3]-200,495]
	, "stats", [regions["stats"][1]+100,regions["stats"][2]+4220,regions["stats"][3]-200,620]
	, "info", [regions["stats"][1]+100,regions["stats"][2]+4940,regions["stats"][3]-200,regions["stats"][4]-4940-100])

; draw region backgrounds (dark grey background for each region)
for k,v in regions
{
	pPen := Gdip_CreatePen(0xff282628, 10), Gdip_DrawRoundedRectangle(G, pPen, v[1], v[2], v[3], v[4], 20), Gdip_DeletePen(pPen)
	pBrush := Gdip_BrushCreateSolid(0xff201e20), Gdip_FillRoundedRectangle(G, pBrush, v[1], v[2], v[3], v[4], 20), Gdip_DeleteBrush(pBrush)
}
for k,v in stat_regions
{
	pPen := Gdip_CreatePen(0xff353335, 10), Gdip_DrawRoundedRectangle(G, pPen, v[1], v[2], v[3], v[4], 20), Gdip_DeletePen(pPen)
	pBrush := Gdip_BrushCreateSolid(0xff2c2a2c), Gdip_FillRoundedRectangle(G, pBrush, v[1], v[2], v[3], v[4], 20), Gdip_DeleteBrush(pBrush)
}

; draw region titles
Gdip_TextToGraphics(G, "HONEY/SEC", "s64 Center Bold cffffffff x" regions["honey/sec"][1] " y" regions["honey/sec"][2]+16, "Segoe UI", regions["honey/sec"][3])
Gdip_TextToGraphics(G, "BUFF UPTIME", "s64 Center Bold cffffffff x" regions["buffs"][1] " y" regions["buffs"][2]+16, "Segoe UI", regions["buffs"][3])
Gdip_TextToGraphics(G, "BACKPACK", "s64 Center Bold cffffffff x" regions["backpack"][1] " y" regions["backpack"][2]+16, "Segoe UI", regions["backpack"][3])


; DRAW GRAPHS AND OTHER ASSETS
; declare coordinate bounds for each graph
graph_regions := Map("honey/sec", [regions["honey/sec"][1]+320,regions["honey/sec"][2]+130,3600,800]
	, "backpack", [regions["backpack"][1]+320,regions["backpack"][2]+130,3600,400]
	, "boost", [regions["buffs"][1]+320,regions["buffs"][2]+135,3600,280]
	, "haste", [regions["buffs"][1]+320,regions["buffs"][2]+435,3600,280]
	, "focus", [regions["buffs"][1]+320,regions["buffs"][2]+735,3600,280]
	, "bombcombo", [regions["buffs"][1]+320,regions["buffs"][2]+1035,3600,280]
	, "balloonaura", [regions["buffs"][1]+320,regions["buffs"][2]+1335,3600,280]
	, "inspire", [regions["buffs"][1]+320,regions["buffs"][2]+1635,3600,280]
	, "reindeerfetch", [regions["buffs"][1]+320,regions["buffs"][2]+1935,3600,280]
	, "honeymark", [regions["buffs"][1]+320,regions["buffs"][2]+2235,3600,120]
	, "pollenmark", [regions["buffs"][1]+320,regions["buffs"][2]+2375,3600,120]
	, "festivemark", [regions["buffs"][1]+320,regions["buffs"][2]+2515,3600,120]
	, "popstar", [regions["buffs"][1]+320,regions["buffs"][2]+2655,3600,110]
	, "melody", [regions["buffs"][1]+320,regions["buffs"][2]+2785,3600,110]
	, "bear", [regions["buffs"][1]+320,regions["buffs"][2]+2915,3600,110]
	, "babylove", [regions["buffs"][1]+320,regions["buffs"][2]+3045,3600,110]
	, "jbshare", [regions["buffs"][1]+320,regions["buffs"][2]+3175,3600,110]
	, "guiding", [regions["buffs"][1]+320,regions["buffs"][2]+3305,3600,110]
	, "honey", [stat_regions["lasthour"][1]+200,stat_regions["lasthour"][2]+650,1080,480]
	, "honey12h", [stat_regions["session"][1]+200,stat_regions["session"][2]+734,1080,480])

; draw graph grids and axes
pPen := Gdip_CreatePen(0x40c0c0f0, 4)
Loop 61
{
	n := (Mod(A_Index, 10) = 1) ? 45 : 25
	Gdip_DrawLine(G, pPen, graph_regions["honey/sec"][1]+graph_regions["honey/sec"][3]*(A_Index-1)//60, graph_regions["honey/sec"][2]+graph_regions["honey/sec"][4]+20, graph_regions["honey/sec"][1]+graph_regions["honey/sec"][3]*(A_Index-1)//60, graph_regions["honey/sec"][2]+graph_regions["honey/sec"][4]+20+n)
	Gdip_DrawLine(G, pPen, graph_regions["backpack"][1]+graph_regions["backpack"][3]*(A_Index-1)//60, graph_regions["backpack"][2]+graph_regions["backpack"][4]+20, graph_regions["backpack"][1]+graph_regions["backpack"][3]*(A_Index-1)//60, graph_regions["backpack"][2]+graph_regions["backpack"][4]+20+n)
	Gdip_DrawLine(G, pPen, graph_regions["boost"][1]+graph_regions["boost"][3]*(A_Index-1)//60, regions["buffs"][2]+regions["buffs"][4]-125, graph_regions["boost"][1]+graph_regions["boost"][3]*(A_Index-1)//60, regions["buffs"][2]+regions["buffs"][4]-125+n)

	if (Mod(A_Index, 10) = 1)
	{
		i := A_Index
		for k,v in graph_regions
			Gdip_DrawLine(G, pPen, v[1]+v[3]*(i-1)//60, v[2], v[1]+v[3]*(i-1)//60, v[2]+v[4])
	}

	if (A_Index < 5 && A_Index > 1)
		y := regions["honey/sec"][2]+130+(regions["honey/sec"][4]-280)*(A_Index-1)//4, Gdip_DrawLine(G, pPen, regions["honey/sec"][1]+260, y, regions["honey/sec"][1]+regions["honey/sec"][3]-100, y)
}
for k,v in graph_regions
{
	if ((v[4] = 280) || (v[4] = 400))
		Gdip_DrawLine(G, pPen, v[1]-60, v[2]+v[4]//2, v[1]+v[3]+60, v[2]+v[4]//2)
	else if (v[4] = 480)
		Loop 3
			Gdip_DrawLine(G, pPen, v[1]-60, v[2]+v[4]*A_Index//4, v[1]+v[3]+60, v[2]+v[4]*A_Index//4)
}

; draw buff images and graph backgrounds
pBrush := Gdip_BrushCreateSolid(0x80141414)
for k,v in graph_regions
{
	Gdip_FillRectangle(G, pBrush, v[1]-60, v[2], v[3]+120, v[4])

	if bitmaps.Has("pBM" k)
	{
		Gdip_DrawImage(G, bitmaps["pBM" k], regions["buffs"][1]+75, v[2]+v[4]//2-55, 110, 110), Gdip_DisposeImage(bitmaps["pBM" k])
		Gdip_DrawLine(G, pPen, v[1]-60, v[2]+v[4]+10, v[1]+v[3]+60, v[2]+v[4]+10)
	}
}
Gdip_DeleteBrush(pBrush), Gdip_DeletePen(pPen)
if (ocr_enabled = 0)
{
	pBrush := Gdip_BrushCreateSolid(0x40cc0000)
	for k,v in ["honey/sec","honey","honey12h"]
		Gdip_FillRectangle(G, pBrush, graph_regions[v][1], graph_regions[v][2], graph_regions[v][3], graph_regions[v][4])
	Gdip_DeleteBrush(pBrush)
}

; draw static buff images
for k,v in ["clock","blessing","bloat","tideblessing","mondo"]
	Gdip_DrawImage(G, bitmaps["pBM" v], stat_regions["buffs"][1]+48+(A_Index-1)*(stat_regions["buffs"][3]-96-220)/4, stat_regions["buffs"][2]+124, 220, 220), Gdip_DisposeImage(bitmaps["pBM" v])

; leave pBM as final graph template
Gdip_DeleteGraphics(G)

; ▰▰▰▰
; TESTING
; ▰▰▰▰
/*
start_time := A_Now
status_changes[A_Min*60+A_Sec] := 0

honey_values[0] := 170000000000000
honey_12h[180] := 170000000000000

Loop 60
	honey_values[A_Index] := honey_values[A_Index-1] + ((Mod(A_Index, 15) < 4) ? 100000000000 : 10000000000)

Loop 3601
{
	if (Mod(A_Index, 5) = 1)
		x := Random(0, 6)
	backpack_values[A_Index-1] := ((Mod(A_Index, 900) < 240) ? 100 : 10) - x
}

status_changes := Map(0,2, 180,1 ,780,2, 1080,1, 1680,2, 1784,3 ,1832,2, 1980,1, 2100,3, 2120,1, 2580,2, 2880,1, 3480,2)

stats[1][2] := 1000
stats[6][2] := 100

for k,v in buff_values
{
	v[0] := 2
	Loop 600
	{
		x := Random(0, (k = "redboost" || k = "whiteboost" || k = "precision") ? 2 : 10)
		x := (x > 6) ? 10 : x
		v[A_Index] := Abs(x-v[A_Index-1]) > 4 ? 10 : x
	}
}

Loop 601
{
	buff_values["tideblessing"][A_Index-1] := "1.10"
	buff_values["bloat"][A_Index-1] := "6.00"
}
buff_values["comforting"][600] := 100

start_honey := 170000000000000
start_time := DateAdd(start_time, -1, "Hours")

SendHourlyReport()
KeyWait "F4", "D"
Reload
ExitApp
*/

; ▰▰▰▰▰
; MAIN LOOP
; ▰▰▰▰▰

; startup finished, set start time
start_time := A_Now
status_changes[A_Min*60+A_Sec] := 0

; set emergency switches in case of time error
last_honey := last_report := time := 0

; indefinite loop of detection and reporting
Loop
{
	; obtain current time and wait until next 6-second interval
	DllCall("GetSystemTimeAsFileTime", "int64p", &time)
	Sleep (60000000-Mod(time, 60000000))//10000 + 100
	time_value := (60*A_Min+A_Sec)//6

	; detect buffs every 6 seconds
	DetectBuffs()

	; detect honey every minute if ocr is enabled
	if ((ocr_enabled = 1) && ((Mod(time_value, 10) = 0) || (last_honey && time > last_honey + 580000000)))
	{
		DetectHoney()
		DllCall("GetSystemTimeAsFileTime", "int64p", &time)
		last_honey := time
	}

	; send report every hour
	if ((time_value = 0) || (last_report && time > last_report + 35980000000))
	{
		SendHourlyReport()
		DllCall("GetSystemTimeAsFileTime", "int64p", &time)
		last_report := time
	}
}



; ▰▰▰▰▰
; FUNCTIONS
; ▰▰▰▰▰

/********************************************************************************************
* @description: detects buffs in BSS and updates the relevant arrays with current buff values
* @returns: (string) list of buffs and their values (buff:value) delimited by new lines
* @author SP
********************************************************************************************/
DetectBuffs()
{
	global buff_values, buff_characters, buff_bitmaps

	; set time value
	time_value := (60*A_Min+A_Sec)//6
	i := (time_value = 0) ? 600 : time_value

	; check roblox window exists
	hwnd := GetRobloxHWND()
	GetRobloxClientPos(hwnd), offsetY := GetYOffset(hwnd)
	if !(windowHeight >= 500)
	{
		for k,v in buff_values
		{
			v[i] := 0
			str .= k ":" 0 "`n"
		}
		return str
	}

	; create bitmap for buffs
	pBMArea := Gdip_BitmapFromScreen(windowX "|" windowY+offsetY+30 "|" windowWidth "|50")

	; basic on/off
	for v in ["jbshare","babylove","festivemark","guiding"]
		buff_values[v][i] := (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBM" v], , , 30, , , InStr(v, "mark") ? 6 : (v = "guiding") ? 10 : 0, , 7) = 1)

	; bear morphs
	buff_values["bear"][i] := 0
	for v in ["Brown","Black","Panda","Polar","Gummy","Science","Mother"]
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBMBear" v], , , 43, , 45, 8, , 2) = 1)
		{
			buff_values["bear"][i] := 1
			break
		}
	}

	; basic x1-x10
	for v in ["focus","bombcombo","balloonaura","clock","honeymark","pollenmark","reindeerfetch"]
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBM" v], &list, , InStr(v, "mark") ? 20 : 30, , 50, InStr(v, "mark") ? 6 : 0, , 7) != 1)
		{
			buff_values[v][i] := 0
			continue
		}

		x := SubStr(list, 1, InStr(list, ",")-1)

		Loop 9
		{
			if (Gdip_ImageSearch(pBMArea, buff_characters[10-A_Index], , x-20, 15, x, 50) = 1)
			{
				buff_values[v][i] := (A_Index = 9) ? 10 : 10 - A_Index
				break
			}
			if (A_Index = 9)
				buff_values[v][i] := 1
		}
	}

	; mondo
	for v in ["mondo"]
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBM" v], &list, , 20, , 46, 21, , 7) != 1)
		{
			buff_values[v][i] := 0
			continue
		}

		x := SubStr(list, 1, InStr(list, ",")-1)

		Loop 9
		{
			if (Gdip_ImageSearch(pBMArea, buff_characters[10-A_Index], , x+16, 20, x+36, 46) = 1)
			{
				buff_values[v][i] := (A_Index = 9) ? 10 : 10 - A_Index
				break
			}
			if (A_Index = 9)
				buff_values[v][i] := 1
		}
	}

	; melody / haste
	x := 0
	Loop 3 ; melody, haste, coconut haste
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBMHaste"], &list, x, 30, , , , , 6) != 1)
			break

		x := SubStr(list, 1, InStr(list, ",")-1)

		if ((s := Gdip_ImageSearch(pBMArea, buff_bitmaps["pBMMelody"], , x+2, 15, x+34, 40, 12)) != 1)
		{
			if !buff_values["haste"].Has(i)
			{
				Loop 9
				{
					if (Gdip_ImageSearch(pBMArea, buff_characters[10-A_Index], , x+6, 15, x+44, 50) = 1)
					{
						buff_values["haste"][i] := (A_Index = 9) ? 10 : 10 - A_Index
						break
					}
					if (A_Index = 9)
						buff_values["haste"][i] := 1
				}
			}
		}
		else if (s = 1)
			buff_values["melody"][i] := 1

		x += 44
	}
	for v in ["melody","haste"]
		if !buff_values[v].Has(i)
			buff_values[v][i] := 0

	; colour boost x1-x10
	x := windowWidth
	Loop 3
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBMBoost"], &list, , 30, x, , , , 7) != 1)
			break

		x := SubStr(list, 1, InStr(list, ",")-1)
		y := SubStr(list, InStr(list, ",")+1)

		; obtain colour of boost buff
		pBMPxRed := Gdip_CreateBitmap(1,2), pBMPxBlue := Gdip_CreateBitmap(1,2)
		pGRed := Gdip_GraphicsFromImage(pBMPxRed), pGBlue := Gdip_GraphicsFromImage(pBMPxBlue)
		Gdip_GraphicsClear(pGRed, 0xffe46156), Gdip_GraphicsClear(pGBlue, 0xff56a4e4)
		Gdip_DeleteGraphics(pGRed), Gdip_DeleteGraphics(pGBlue)
		v := (Gdip_ImageSearch(pBMArea, pBMPxRed, , x-30, 15, x-4, 34, 20, , , 2) = 2) ? "redboost"
			: (Gdip_ImageSearch(pBMArea, pBMPxBlue, , x-30, 15, x-4, 34, 20, , , 2) = 2) ? "blueboost"
			: "whiteboost"
		Gdip_DisposeImage(pBMPxRed), Gdip_DisposeImage(pBMPxBlue)

		; find stack number
		Loop 9
		{
			if Gdip_ImageSearch(pBMArea, buff_characters[10-A_Index], , x-20, 15, x, 50)
			{
				buff_values[v][i] := (A_Index = 9) ? 10 : 10 - A_Index
				break
			}
			if (A_Index = 9)
				buff_values[v][i] := 1
		}

		x -= 2*y-53 ; take away width of buff square to prevent duplication
	}
	for v in ["redboost","blueboost","whiteboost"]
		if !buff_values[v].Has(i)
			buff_values[v][i] := 0

	; 2 digit
	for v in ["blessing","inspire"]
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBM" v], &list, , 20, , , (v = "blessing") ? 21 : 0, , (v = "blessing") ? 6 : 7) != 1)
		{
			buff_values[v][i] := 0
			continue
		}

		x := SubStr(list, 1, InStr(list, ",")-1)

		(digits := Map()).Default := ""

		Loop 10
		{
			n := 10-A_Index
			if ((n = 1) || (n = 3))
				continue
			Gdip_ImageSearch(pBMArea, buff_characters[n], &list:="", ((v = "blessing") ? x+8 : x-20), 15, ((v = "blessing") ? x+36 : x), 50, 1, , 5, 5, , "`n")
			Loop Parse list, "`n"
				if (A_Index & 1)
					digits[Integer(A_LoopField)] := n
		}

		for m,n in [1,3]
		{
			Gdip_ImageSearch(pBMArea, buff_characters[n], &list:="", ((v = "blessing") ? x+8 : x-20), 15, ((v = "blessing") ? x+36 : x), 50, 1, , 5, 5, , "`n")
			Loop Parse list, "`n"
			{
				if (A_Index & 1)
				{
					if (((n = 1) && (digits[A_LoopField - 5] = 4)) || ((n = 3) && (digits[A_LoopField - 1] = 8)))
						continue
					digits[Integer(A_LoopField)] := n
				}
			}
		}

		num := ""
		for x,y in digits
			num .= y

		buff_values[v][i] := num ? Min(num, (v = "inspire" ? 50 : 100)) : 1
	}

	; scaled
	for v in ["bloat","comforting","motivating","satisfying","refreshing","invigorating"]
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBM" v], &list, , 30, , , , , 6) != 1)
		{
			buff_values[v][i] := 0
			continue
		}

		x := SubStr(list, 1, InStr(list, ",")-1)

		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBM" v], &list, x, 6, x+38, 44) != 1)
		{
			buff_values[v][i] := 0
			continue
		}

		y := SubStr(list, InStr(list, ",")+1)

		buff_values[v][i] := String(Round(Min((44 - y) / 38, 1) * ((v = "bloat") ? 5 : 100) + ((v = "bloat") ? 1 : 0), (v = "bloat") ? 2 : 0))
	}

	; tide
	for v in ["tideblessing"]
	{
		if (Gdip_ImageSearch(pBMArea, buff_bitmaps["pBM" v], &list, , 30, , , , , 6) != 1)
			continue

		x := SubStr(list, 1, InStr(list, ",")-1)

		pBM := Gdip_CreateBitmap(36, 1), Gdip_SetPixel(pBM, 0, 0, 0xff91c2fd), Gdip_SetPixel(pBM, 35, 0, 0xff91c2fd)

		s := Gdip_ImageSearch(pBMArea, pBM, &list, x-16, 6, x+36, 44)
		Gdip_DisposeImage(pBM)
		if (s != 1)
			continue

		y := SubStr(list, InStr(list, ",")+1)
		buff_values[v][i] := String(Round(1.01 + 0.19 * (44.3 - y) / 38, 2))
	}

	; form string
	str := ""
	for k,v in buff_values
		str .= k ":" (v.Has(i) ? v[i] : 0) "`n"

	; clean up and return
	Gdip_DisposeImage(pBMArea)
	return str
}

/********************************************************************
* @description: uses OCR to detect the current honey value in BSS
* @returns: (string) current honey value or (integer) 0 on failure
* @note function is a WIP, and OCR readings are not 100% reliable!
* @author SP
********************************************************************/
DetectHoney()
{
	global honey_values, start_honey, start_time, ocr_language

	; check roblox window exists
	hwnd := GetRobloxHWND()
	GetRobloxClientPos(hwnd), offsetY := GetYOffset(hwnd)
	if !(windowHeight >= 500)
		return 0

	; initialise array to store detected values and get bitmap and effect ready
	detected := Map()
	pBM := Gdip_BitmapFromScreen(windowX+windowWidth//2-241 "|" windowY+offsetY "|140|36")
	pEffect := Gdip_CreateEffect(5,-80,30)

	; detect honey, enlarge image if necessary
	Loop 25
	{
		i := A_Index
		Loop 2
		{
			pBMNew := Gdip_ResizeBitmap(pBM, ((A_Index = 1) ? (250 + i * 20) : (750 - i * 20)), 36 + i * 4, 2)
			Gdip_BitmapApplyEffect(pBMNew, pEffect)
			hBM := Gdip_CreateHBITMAPFromBitmap(pBMNew)
			;Gdip_SaveBitmapToFile(pBMNew, i A_Index ".png")
			Gdip_DisposeImage(pBMNew)
			pIRandomAccessStream := HBitmapToRandomAccessStream(hBM)
			DllCall("DeleteObject", "Ptr", hBM)
			try detected[v := ((StrLen((n := RegExReplace(StrReplace(StrReplace(StrReplace(StrReplace(ocr(pIRandomAccessStream, ocr_language), "o", "0"), "i", "1"), "l", "1"), "a", "4"), "\D"))) > 0) ? n : 0)] := detected.Has(v) ? [detected[v][1]+1, detected[v][2] " " i . A_Index] : [1, i . A_Index]
		}
	}

	; clean up
	Gdip_DisposeImage(pBM), Gdip_DisposeEffect(pEffect)
	DllCall("psapi.dll\EmptyWorkingSet", "UInt", -1)

	; evaluate current honey
	current_honey := 0
	for k,v in detected
		if ((v[1] > 2) && (k > current_honey))
			current_honey := k

	; update honey values array and write values to ini
	index := (A_Min = "00") ? 60 : Integer(A_Min)
	if current_honey
	{
		honey_values[index] := current_honey
		if (FileExist("settings\nm_config.ini") && IsSet(start_time))
		{
			session_time := DateDiff(A_Now, start_time, "S")
			session_total := current_honey - start_honey
			try IniWrite FormatNumber(session_total), "settings\nm_config.ini", "Status", "SessionTotalHoney"
			try IniWrite FormatNumber(session_total*3600/session_time), "settings\nm_config.ini", "Status", "HoneyAverage"
		}
		return current_honey
	}
	else
		return 0
}

/********************************************************************************************************
* @description: creates an hourly report (image) from the honey and buff arrays, then sends it to Discord
* @author SP
********************************************************************************************************/
SendHourlyReport()
{
	global pBM, regions, stat_regions, honey_values, honey_12h, backpack_values, buff_values, buff_colors, status_changes, start_time, start_honey, stats, latest_boost, latest_winds, graph_regions, version, natro_version, os_version, bitmaps, ocr_enabled, ocr_language
	static honey_average := 0, honey_earned := 0, convert_time := 0, gather_time := 0, other_time := 0, stats_old := [["Total Boss Kills",0],["Total Vic Kills",0],["Total Bug Kills",0],["Total Planters",0],["Quests Done",0],["Disconnects",0]]

	if (honey_values.Count > 0)
	{
		; identify and exterminate misread values
		max_value := maxX(honey_values)

		str := ""
		for k,v in honey_values
			if (v < max_value//8) ; any value smaller than this is regarded as a misread
				str .= (StrLen(str) ? " " : "") k

		Loop Parse str, A_Space
			honey_values.Delete(Integer(A_LoopField))

		min_value := minX(honey_values), max_value := Max(maxX(honey_values), min_value+1000), range_value := max_value - min_value
	}
	else
		min_value := 0, max_value := 1000, range_value := 1000

	; populate honey_values array, fill missing values
	enum := honey_values.__Enum()
	enum.Call(&x2,&y2)
	for x1,y1 in honey_values
	{
		if (enum.Call(&x2,&y2) = 0)
		{
			if (x1 < 60)
				Loop (60 - x1)
					honey_values[x1+A_Index] := y1
			break
		}
		delta_x := x2 - x1
		if (delta_x > 1)
		{
			delta_y := y2 - y1
			Loop (delta_x - 1)
				honey_values[x1+A_Index] := y1 + A_Index * (delta_y/delta_x)
		}
	}
	Loop 61
		if !honey_values.Has(A_Index-1)
			honey_values[A_Index-1] := min_value

	; update honey gradients and 12h data
	honey_gradients := Map()
	for k,v in honey_values
		if (k < 60)
			honey_gradients[k+1] := (honey_values[k+1]-honey_values[k])/60
	honey_gradients[0] := honey_gradients[1], honey_gradients[61] := honey_gradients[60]

	Loop 166
		try honey_12h[A_Index - 1] := honey_12h[A_Index + 14]
	Loop 15
		honey_12h[A_Index + 165] := honey_values[4*A_Index]

	; set time arrays (10 min interval and 2 hour for 12h graph)
	times := [], times_12h := []
	time := A_Now
	Loop 7
		times.InsertAt(1, FormatTime(time, "HH:mm")), time := DateAdd(time, -10, "m")
	time := DateAdd(time, 70, "m")
	Loop 7
		times_12h.InsertAt(1, FormatTime(time, "HH:mm")), time := DateAdd(time, -2, "h")

	; create report bitmap and graphics
	pBMReport := Gdip_CloneBitmap(pBM)
	G := Gdip_GraphicsFromImage(pBMReport)
	Gdip_SetSmoothingMode(G, 4)
	Gdip_SetInterpolationMode(G, 7)

	; set variable graph bounds
	min_gradient := 0, max_gradient := Max(maxX(honey_gradients), min_gradient+1000), range_gradient := Floor(max_gradient - min_gradient)
	min_12h := minX(honey_12h), max_12h := Max(maxX(honey_12h), min_12h+1000), range_12h := max_12h - min_12h

	; draw times
	for v in ["honey/sec","backpack","buffs"]
		Loop 7
			Gdip_TextToGraphics(G, times[A_Index], "s44 Center Bold cffffffff x" regions[v][1]+320+(regions[v][3]-480)*(A_Index-1)//6 " y" regions[v][2]+regions[v][4]-85, "Segoe UI")
	for k,v in Map("honey","times", "honey12h","times_12h")
		Loop 7
			Gdip_TextToGraphics(G, %v%[A_Index], "s30 Center Bold cffffffff x" graph_regions[k][1]+graph_regions[k][3]*(A_Index-1)//6 " y" graph_regions[k][2]+graph_regions[k][4]+14, "Segoe UI")

	; draw graphs
	for k,v in graph_regions
	{
		pBMGraph := Gdip_CreateBitmap(v[3]+8, v[4]+8)
		G_Graph := Gdip_GraphicsFromImage(pBMGraph)
		Gdip_SetSmoothingMode(G_Graph, 4)
		Gdip_SetInterpolationMode(G_Graph, 7)

		switch k
		{
			case "honey/sec":
			Loop 5
				Gdip_TextToGraphics(G, FormatNumber(max_gradient-(range_gradient*(A_Index-1))//4), "s40 Right Bold cffffffff x" v[1]-320 " y" v[2]+v[4]*(A_Index-1)//4-28, "Segoe UI", 240)

			enum := status_changes.__Enum()
			enum.Call(&m)
			for i,j in status_changes
			{
				if (enum.Call(&m) = 0)
					m := 3599
				points := []
				points.Push([4+i*v[3]/3600, 4+v[4]])
				points.Push([4+i*v[3]/3600, 4+v[4]-(honey_gradients[(i+30)//60]+((i+30)/60-(i+30)//60)*(honey_gradients[(i+30)//60+1]-honey_gradients[(i+30)//60])-min_gradient)/range_gradient*v[4]])
				for x,y in honey_gradients
					((y != "") && (x >= (i+30)/60 && x <= (m+30)/60)) && points.Push([4+(x-0.5)*v[3]/60, 4+v[4]-((y > 0) ? (((y-min_gradient)/range_gradient)*v[4]) : 0)])
				points.Push([4+m*v[3]/3600, 4+v[4]-(honey_gradients[(m+30)//60]+((m+30)/60-(m+30)//60)*(honey_gradients[(m+30)//60+1]-honey_gradients[(m+30)//60])-min_gradient)/range_gradient*v[4]])
				points.Push([4+m*v[3]/3600, 4+v[4]])

				color := (j = 1) ? 0xffa6ff7c
						: (j = 2) ? 0xfffeca40
						: 0xff859aad

				pBrush := Gdip_BrushCreateSolid(color - 0x80000000)
				Gdip_FillPolygon(G_Graph, pBrush, points)
				Gdip_DeleteBrush(pBrush)

				points.RemoveAt(1), points.Pop()
				pPen := Gdip_CreatePen(color, 6)
				Gdip_DrawLines(G_Graph, pPen, points)
				Gdip_DeletePen(pPen)
			}


			case "honey":
			Loop 5
				Gdip_TextToGraphics(G, FormatNumber(max_value-(range_value*(A_Index-1))//4), "s28 Right Bold cffffffff x" v[1] - 310 " y" v[2]+v[4]*(A_Index-1)//4 - 20, "Segoe UI", 240)

			enum := status_changes.__Enum()
			enum.Call(&m)
			for i,j in status_changes
			{
				if (enum.Call(&m) = 0)
					m := 3599
				points := []
				points.Push([4+i*v[3]/3600, 4+v[4]])
				points.Push([4+i*v[3]/3600, 4+v[4]-(honey_values[i//60]+(i/60-i//60)*(honey_values[i//60+1]-honey_values[i//60])-min_value)/range_value*v[4]])
				for x,y in honey_values
					((y != "") && (x >= i/60 && x <= m/60)) && points.Push([4+x*v[3]/60, 4+v[4]-((y > 0) ? (((y-min_value)/range_value)*v[4]) : 0)])
				points.Push([4+m*v[3]/3600, 4+v[4]-(honey_values[m//60]+(m/60-m//60)*(honey_values[m//60+1]-honey_values[m//60])-min_value)/range_value*v[4]])
				points.Push([4+m*v[3]/3600, 4+v[4]])

				color := (j = 1) ? 0xffa6ff7c
						: (j = 2) ? 0xfffeca40
						: 0xff859aad

				pBrush := Gdip_BrushCreateSolid(color - 0x80000000)
				Gdip_FillPolygon(G_Graph, pBrush, points)
				Gdip_DeleteBrush(pBrush)

				points.RemoveAt(1), points.Pop()
				pPen := Gdip_CreatePen(color, 6)
				Gdip_DrawLines(G_Graph, pPen, points)
				Gdip_DeletePen(pPen)
			}


			case "honey12h":
			Loop 5
				Gdip_TextToGraphics(G, FormatNumber(max_12h-Floor((range_12h*(A_Index-1))/4)), "s28 Right Bold cffffffff x" v[1]-310 " y" v[2]+v[4]*(A_Index-1)//4-20, "Segoe UI", 240)

			points := []
			honey_12h.__Enum().Call(&x), points.Push([4+v[3]*x/180, 4+v[4]])
			for x,y in honey_12h
				(y != "") && points.Push([4+v[3]*(max_x := x)/180, 4+v[4]-((y-min_12h)/range_12h)*v[4]])
			points.Push([4+v[3]*max_x/180, 4+v[4]])
			color := 0xff0e8bf0

			pBrush := Gdip_BrushCreateSolid(color - 0x80000000)
			Gdip_FillPolygon(G_Graph, pBrush, points)
			Gdip_DeleteBrush(pBrush)

			points.RemoveAt(1), points.Pop()
			pPen := Gdip_CreatePen(color, 6)
			Gdip_DrawLines(G_Graph, pPen, points)
			Gdip_DeletePen(pPen)


			case "backpack":
			Loop 3
				Gdip_TextToGraphics(G, 150-50*A_Index "%", "s40 Right Bold cffffffff x" v[1]-320 " y" v[2]+v[4]*(A_Index-1)//2-28, "Segoe UI", 240)

			points := []
			backpack_values.__Enum().Call(&x), points.Push([4+x*v[3]/3600, 4+v[4]])
			for x,y in backpack_values
				(y != "") && points.Push([4+(max_x := x)*v[3]/3600, 4+v[4]-(y/100)*v[4]])
			points.Push([4+max_x*v[3]/3600, 4+v[4]])

			pBrush := Gdip_CreateLinearGrBrushFromRect(4, 4, v[3], v[4], 0x00000000, 0x00000000)
			Gdip_SetLinearGrBrushPresetBlend(pBrush, [0.0, 0.2, 0.8], [0xffff0000, 0xffff8000, 0xff41ff80])
			pPen := Gdip_CreatePenFromBrush(pBrush, 6)
			Gdip_SetLinearGrBrushPresetBlend(pBrush, [0.0, 0.2, 0.8], [0x80ff0000, 0x80ff8000, 0x8041ff80])
			Gdip_FillPolygon(G_Graph, pBrush, points)
			points.RemoveAt(1), points.Pop()
			Gdip_DrawLines(G_Graph, pPen, points)
			Gdip_DeletePen(pPen), Gdip_DeleteBrush(pBrush)


			case "boost":
			Gdip_TextToGraphics(G, "x0-10", "s44 Center Bold cffffffff x" v[1]-190 " y" v[2]+190, "Segoe UI")

			Loop 3
			{
				i := (A_Index = 1) ? "whiteboost"
					: (A_Index = 2) ? "redboost"
					: "blueboost"

				total := 0
				count := 0
				enum := status_changes.__Enum()
				enum.Call(&m)
				for a,b in status_changes
				{
					if (enum.Call(&m) = 0)
						m := 3600
					if (b != 1)
						continue
					for x,y in buff_values[i]
					{
						if (x >= a//6 && x <= m//6)
						{
							total += y
							count++
						}
					}
				}

				color := (i = "whiteboost") ? 0xffffffff
					: (i = "redboost") ? 0xffe46156
					: 0xff56a4e4

				pBrush := Gdip_BrushCreateSolid(color), Gdip_TextToGraphics(G, "x" . (count ? Round(total/count, 3) : "0.000"), "s32 Center Bold c" pBrush " x" v[1]-190 " y" v[2]+(72-36*A_Index), "Segoe UI"), Gdip_DeleteBrush(pBrush)

				points := []

				buff_values[i].__Enum().Call(&x), points.Push([4+v[3]*x/600, 4+v[4]])
				for x,y in buff_values[i]
					points.Push([4+v[3]*(max_x := x)/600, 4+v[4]-((y <= 10) ? (y/10)*(v[4]) : 10)])
				points.Push([4+v[3]*max_x/600, 4+v[4]])

				if (points.Length > 2)
				{
					pBrush := Gdip_CreateLinearGrBrushFromRect(4, 4, v[3], v[4], 0x00000000, color - 0x40000000)
					Gdip_SetLinearGrBrushSigmaBlend(pBrush, 0, 0.3)
					Gdip_FillPolygon(G_Graph, pBrush, points)
					Gdip_DeleteBrush(pBrush)

					points.RemoveAt(1), points.Pop()
					pPen := Gdip_CreatePen(color, 4)
					Gdip_DrawCurve(G_Graph, pPen, points, 0)
					Gdip_DeletePen(pPen)
				}
			}


			case "honeymark","pollenmark","precisemark":
			color := (k = "honeymark") ? 0xffffd119
				: (k = "pollenmark") ? 0xffffe994
				: 0xff8f4eb4

			pBrush := Gdip_BrushCreateSolid(color-0x60000000)
			for x,y in buff_values[k]
				(y && y < 4 && y > 0) && Gdip_FillRectangle(G_Graph, pBrush, 4+v[3]*x//600, 4+v[4]*(3-y)//3, 6, v[4]*y//3)
			Gdip_DeleteBrush(pBrush)


			case "festivemark","popstar","melody","bear","babylove","jbshare","guiding":
			color := (k = "festivemark") ? 0xffc84335
				: (k = "popstar") ? 0xff0096ff
				: (k = "melody") ? 0xfff0f0f0
				: (k = "bear") ? 0xffb26f3e
				: (k = "babylove") ? 0xff8de4f3
				: (k = "jbshare") ? 0xfff9ccff
				: 0xffffef8e

			pBrush := Gdip_BrushCreateSolid(color-0x60000000)
			enum := buff_values[k].__Enum()
			enum.Call(&x2)
			for x,y in buff_values[k]
			{
				if (enum.Call(&x2) = 0)
					x2 := 600
				(y) && Gdip_FillRectangle(G_Graph, pBrush, 4+v[3]*x//600, 4, (x2-x)*6, v[4])
			}
			Gdip_DeleteBrush(pBrush)


			default:
			max_buff := (k = "inspire") ? Max(ceil(maxX(buff_values[k])/5)*5, 5) : 10
			Gdip_TextToGraphics(G, "x0-" max_buff, "s44 Center Bold cffffffff x" v[1]-190 " y" v[2]+190, "Segoe UI")

			total := 0
			count := 0
			enum := status_changes.__Enum()
			enum.Call(&m)
			for a,b in status_changes
			{
				if (enum.Call(&m) = 0)
					m := 3600
				if (b != 1)
					continue
				for x,y in buff_values[k]
				{
					if (x >= a//6 && x <= m//6)
					{
						total += y
						count++
					}
				}
			}

			color := (k = "focus") ? 0xff22ff06
				: (k = "haste") ? 0xfff0f0f0
				: (k = "bombcombo") ? 0xffa0a0a0
				: (k = "balloonaura") ? 0xff3350c3
				: (k = "inspire") ? 0xfff4ef14
				: (k = "precision") ? 0xff8f4eb4
				: (k = "reindeerfetch") ? 0xffcc2c2c : 0

			pBrush := Gdip_BrushCreateSolid(color), Gdip_TextToGraphics(G, "x" . (count ? Round(total/count, 3) : "0.000"), "s32 Center Bold c" pBrush " x" v[1]-190 " y" v[2]+36, "Segoe UI"), Gdip_DeleteBrush(pBrush)

			points := []

			buff_values[k].__Enum().Call(&x), points.Push([4+v[3]*x/600, 4+v[4]])
			for x,y in buff_values[k]
				points.Push([4+v[3]*(max_x := x)/600, 4+v[4]-(y/max_buff)*(v[4])])
			points.Push([4+v[3]*max_x/600, 4+v[4]])

			if (points.Length > 2)
			{
				pBrush := Gdip_CreateLinearGrBrushFromRect(4, 4, v[3], v[4], 0x00000000, color - 0x40000000)
				Gdip_SetLinearGrBrushSigmaBlend(pBrush, 0, 0.3)
				Gdip_FillPolygon(G_Graph, pBrush, points)
				Gdip_DeleteBrush(pBrush)

				points.RemoveAt(1), points.Pop()
				pPen := Gdip_CreatePen(color, 4)
				Gdip_DrawLines(G_Graph, pPen, points)
				Gdip_DeletePen(pPen)
			}
		}

		Gdip_DeleteGraphics(G_Graph)
		Gdip_DrawImage(G, pBMGraph, v[1]-4, v[2]-4)
		Gdip_DisposeImage(pBMGraph)
	}

	; calculate times
	time := DateAdd(DateAdd(A_Now, -A_Min, "Minutes"), -A_Sec, "Seconds")
	session_time := DateDiff(time, start_time, "Seconds")

	local hour_gather_time := 0, hour_convert_time := 0, hour_other_time := 0
		, hour_gather_percent := "0%", hour_convert_percent := "0%", hour_other_percent := "0%"
		, gather_percent := "0%", convert_percent := "0%", other_percent := "0%"

	status_list := ["Gather","Convert","Other"]
	for i,j in status_list
		hour_%j%_time := 0
	enum := status_changes.__Enum()
	enum.Call(&m)
	for i,j in status_changes
	{
		if (enum.Call(&m) = 0)
			m := 3600
		status := (j = 1) ? "Gather"
			: (j = 2) ? "Convert"
			: "Other"
		hour_%status%_time += m-i
	}
	for i,j in status_list
		%j%_time += hour_%j%_time

	unix_now := DateDiff(SubStr(A_NowUTC, 1, 10), "19700101000000", "Seconds")

	; calculate percentages
	cumul_hour := 0, cumul_hour_rounded := 0
	cumul_total := 0, cumul_total_rounded := 0
	for i,j in status_list
	{
		cumul_hour += hour_%j%_time*100/3600
		hour_%j%_percent := Round(cumul_hour) - cumul_hour_rounded . "%"
		cumul_hour_rounded := Round(cumul_hour)

		cumul_total += %j%_time*100/session_time
		%j%_percent := Round(cumul_total) - cumul_total_rounded . "%"
		cumul_total_rounded := Round(cumul_total)
	}

	; session stats
	current_honey := honey_values[60]
	session_total := current_honey - start_honey

	; last hour stats
	hour_increase := (honey_values[60] - honey_values[0] < honey_earned) ? "0" : "1"
	honey_earned := honey_values[60] - honey_values[0]
	average_difference := honey_average ? ((session_total * 3600 / session_time) - honey_average) : 0
	honey_change := (average_difference = 0) ? "(+0%)" : (average_difference > 0) ? "(+" . Ceil(average_difference * 100 / Abs(honey_average)) . "%)" : "(" . Floor(average_difference * 100 / Abs(honey_average)) . "%)"
	honey_average := session_total * 3600 / session_time


	; WRITE STATS
	; section 1: last hour
	Gdip_TextToGraphics(G, "LAST HOUR", "s64 Center Bold cffffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2 " y" stat_regions["lasthour"][2]+4, "Segoe UI")

	Gdip_TextToGraphics(G, "Honey Earned", "s60 Right Bold ccfffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2-40 " y" stat_regions["lasthour"][2]+96, "Segoe UI")
	pos := Gdip_TextToGraphics(G, FormatNumber(honey_earned), "s60 Left Bold cffffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2+40 " y" stat_regions["lasthour"][2]+96, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)
	pBrush := Gdip_BrushCreateSolid(hour_increase ? 0xff00ff00 : 0xffff0000), (x) && Gdip_FillPolygon(G, pBrush, hour_increase ? [[x+45, stat_regions["lasthour"][2]+119], [x+20, stat_regions["lasthour"][2]+161], [x+70, stat_regions["lasthour"][2]+161]] : [[x+20, stat_regions["lasthour"][2]+119], [x+70, stat_regions["lasthour"][2]+119], [x+45, stat_regions["lasthour"][2]+161]]), Gdip_DeleteBrush(pBrush)

	Gdip_TextToGraphics(G, "Hourly Average", "s60 Right Bold ccfffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2-40 " y" stat_regions["lasthour"][2]+180, "Segoe UI")
	pos := Gdip_TextToGraphics(G, FormatNumber(honey_average), "s60 Left Bold cffffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2+40 " y" stat_regions["lasthour"][2]+180, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)
	Gdip_TextToGraphics(G, honey_change, "s60 Left Bold c" . (InStr(honey_change, "-") ? "ffff0000" : InStr(honey_change, "+0") ? "ff888888" : "ff00ff00") . " x" x " y" stat_regions["lasthour"][2]+180, "Segoe UI")

	angle := -90
	for i,j in status_list
	{
		color := (j = "Gather") ? 0xffa6ff7c
				: (j = "Convert") ? 0xfffeca40
				: 0xff859aad
		pBrush := Gdip_BrushCreateSolid(color)
		Gdip_FillPie(G, pBrush, stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2-464, stat_regions["lasthour"][2]+318, 280, 280, angle, hour_%j%_time/10)
		angle += hour_%j%_time/10

		Gdip_FillRoundedRectangle(G, pBrush, stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2+74, stat_regions["lasthour"][2]+348+(A_Index-1)*88, 44, 44, 4)
		Gdip_DeleteBrush(pBrush)

		Gdip_TextToGraphics(G, j, "s48 Right Bold ccfffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2+56 " y" stat_regions["lasthour"][2]+335+(A_Index-1)*88, "Segoe UI")
		Gdip_TextToGraphics(G, DurationFromSeconds(hour_%j%_time), "s48 Left Bold cefffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2+135 " y" stat_regions["lasthour"][2]+335+(A_Index-1)*88, "Segoe UI")
		Gdip_TextToGraphics(G, hour_%j%_percent, "s48 Right Bold cefffffff x" stat_regions["lasthour"][1]+stat_regions["lasthour"][3]//2+476 " y" stat_regions["lasthour"][2]+335+(A_Index-1)*88, "Segoe UI")
	}

	; section 2: session
	Gdip_TextToGraphics(G, "SESSION", "s64 Center Bold cffffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2 " y" stat_regions["session"][2]+4, "Segoe UI")

	Gdip_TextToGraphics(G, "Current Honey", "s60 Right Bold ccfffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2-40 " y" stat_regions["session"][2]+96, "Segoe UI")
	Gdip_TextToGraphics(G, FormatNumber(current_honey), "s60 Left Bold cffffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2+40 " y" stat_regions["session"][2]+96, "Segoe UI")

	Gdip_TextToGraphics(G, "Session Honey", "s60 Right Bold ccfffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2-40 " y" stat_regions["session"][2]+180, "Segoe UI")
	Gdip_TextToGraphics(G, FormatNumber(session_total), "s60 Left Bold cffffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2+40 " y" stat_regions["session"][2]+180, "Segoe UI")

	Gdip_TextToGraphics(G, "Session Time", "s60 Right Bold ccfffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2-40 " y" stat_regions["session"][2]+264, "Segoe UI")
	session_time_F := DurationFromSeconds(session_time)
	Gdip_TextToGraphics(G, session_time_F, "s60 Left Bold cffffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2+40 " y" stat_regions["session"][2]+264, "Segoe UI")

	angle := -90
	for i,j in status_list
	{
		color := (j = "Gather") ? 0xffa6ff7c
				: (j = "Convert") ? 0xfffeca40
				: 0xff859aad
		pBrush := Gdip_BrushCreateSolid(color)
		Gdip_FillPie(G, pBrush, stat_regions["session"][1]+stat_regions["session"][3]//2-464, stat_regions["session"][2]+402, 280, 280, angle, %j%_time/session_time*360)
		angle += %j%_time/session_time*360

		Gdip_FillRoundedRectangle(G, pBrush, stat_regions["session"][1]+stat_regions["session"][3]//2+74, stat_regions["session"][2]+432+(A_Index-1)*88, 44, 44, 4)
		Gdip_DeleteBrush(pBrush)

		Gdip_TextToGraphics(G, j, "s48 Right Bold ccfffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2+56 " y" stat_regions["session"][2]+419+(A_Index-1)*88, "Segoe UI")
		Gdip_TextToGraphics(G, DurationFromSeconds(%j%_time), "s48 Left Bold cefffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2+135 " y" stat_regions["session"][2]+419+(A_Index-1)*88, "Segoe UI")
		Gdip_TextToGraphics(G, %j%_percent, "s48 Right Bold cefffffff x" stat_regions["session"][1]+stat_regions["session"][3]//2+476 " y" stat_regions["session"][2]+419+(A_Index-1)*88, "Segoe UI")
	}

	; section 3: buffs
	Gdip_TextToGraphics(G, "BUFFS", "s64 Center Bold cffffffff x" stat_regions["buffs"][1]+stat_regions["buffs"][3]//2 " y" stat_regions["buffs"][2]+4, "Segoe UI")

	for k,v in ["clock","blessing","bloat","tideblessing","mondo"]
	{
		i := A_Index
		Loop 601
		{
			if (buff_values[v].Has(601-A_Index) && (buff_values[v][601-A_Index] > 0))
			{
				if (i = 3 || i = 4)
					pBrush := Gdip_BrushCreateSolid(0x70000000), Gdip_FillRectangle(G, pBrush, stat_regions["buffs"][1]+47+(i-1)*(stat_regions["buffs"][3]-96-220)/4, stat_regions["buffs"][2]+123, 221, 1+Min((1-((buff_values[v][601-A_Index]-1)/((i = 3) ? 5.00 : 0.20))) * 220, 220)), Gdip_DeleteBrush(pBrush)

				pBrush := Gdip_BrushCreateSolid(0xffffffff), pPen := Gdip_CreatePen(0xff000000, 10)
				Gdip_DrawOrientedString(G, "x" buff_values[v][601-A_Index], "Segoe UI", 72, 1, stat_regions["buffs"][1]+48+(i-1)*(stat_regions["buffs"][3]-96-220)/4, stat_regions["buffs"][2]+254, 220, 90, , pBrush, pPen, 2)
				Gdip_DeletePen(pPen), Gdip_DeleteBrush(pBrush)
				break
			}
			if (A_Index = 601)
			{
				pBrush := Gdip_BrushCreateSolid(0x70000000), Gdip_FillRectangle(G, pBrush, stat_regions["buffs"][1]+47+(i-1)*(stat_regions["buffs"][3]-96-220)/4, stat_regions["buffs"][2]+123, 221, 221), Gdip_DeleteBrush(pBrush)
				pBrush := Gdip_BrushCreateSolid(0xffffffff), pPen := Gdip_CreatePen(0xff000000, 10)
				Gdip_DrawOrientedString(G, "x0", "Segoe UI", 72, 1, stat_regions["buffs"][1]+48+(i-1)*(stat_regions["buffs"][3]-96-220)/4, stat_regions["buffs"][2]+254, 220, 90, , pBrush, pPen, 2)
				Gdip_DeletePen(pPen), Gdip_DeleteBrush(pBrush)
			}
		}
	}

	planters := 0

	local PlanterName1 := "", PlanterName2 := "", PlanterName3 := ""
		, PlanterField1 := "", PlanterField2 := "", PlanterField3 := ""
		, PlanterHarvestTime1 := 0, PlanterHarvestTime2 := 0, PlanterHarvestTime3 := 0
		, PlanterNectar1 := "", PlanterNectar2 := "", PlanterNectar3 := ""
		, PlanterEstPercent1 := 0, PlanterEstPercent2 := 0, PlanterEstPercent3 := 0
		, MPlanterHold1 := 0, MPlanterHold2 := 0, MPlanterHold3 := 0
		, MPlanterSmoking1 := 0, MPlanterSmoking2 := 0, MPlanterSmoking3 := 0

	Loop 3
	{
		PlanterName%A_Index% := IniRead("settings\nm_config.ini", "Planters", "PlanterName" A_Index, "None")
		PlanterField%A_Index% := IniRead("settings\nm_config.ini", "Planters", "PlanterField" A_Index, "None")
		PlanterHarvestTime%A_Index% := IniRead("settings\nm_config.ini", "Planters", "PlanterHarvestTime" A_Index, "20211106000000")
		PlanterNectar%A_Index% := IniRead("settings\nm_config.ini", "Planters", "PlanterNectar" A_Index, "None")
		PlanterEstPercent%A_Index% := IniRead("settings\nm_config.ini", "Planters", "PlanterEstPercent" A_Index, 0)
		if (PlanterName%A_Index% && (PlanterName%A_Index% != "None"))
			planters++
	}

	for i,j in ["comforting","motivating","satisfying","refreshing","invigorating"]
	{
		color := (j = "comforting") ? 0xff7e9eb3
			: (j = "motivating") ? 0xff937db3
			: (j = "satisfying") ? 0xffb398a7
			: (j = "refreshing") ? 0xff78b375
			: 0xffb35951 ; invigorating

		nectar_value := 0
		Loop 601
		{
			if (buff_values[j].Has(601-A_Index) && (buff_values[j][601-A_Index] > 0))
			{
				nectar_value := buff_values[j][601-A_Index]
				break
			}
		}

		projected_value := 0
		Loop 3
			projected_value += (PlanterNectar%A_Index% = j) ? (PlanterEstPercent%A_Index% - Max(PlanterHarvestTime%A_Index% - unix_now, 0)/864) : 0
		projected_value := Max(Min(projected_value, 100-nectar_value), 0)

		pPen := Gdip_CreatePen(color, 32), Gdip_DrawArc(G, pPen, stat_regions["buffs"][1]+50+(A_Index-1)*(stat_regions["buffs"][3]-100-200)/4, stat_regions["buffs"][2]+410, 200, 200, -90, nectar_value/100*360), Gdip_DeletePen(pPen)

		pBrush := Gdip_BrushCreateHatch(color, color-0xa0000000, 34), pPen := Gdip_CreatePenFromBrush(pBrush, 32), Gdip_DeleteBrush(pBrush), Gdip_DrawArc(G, pPen, stat_regions["buffs"][1]+50+(A_Index-1)*(stat_regions["buffs"][3]-100-200)/4, stat_regions["buffs"][2]+410, 200, 200, -90-1+nectar_value/100*360, projected_value/100*360+1), Gdip_DeletePen(pPen)

		pPen := Gdip_CreatePen(color-0xd0000000, 32), Gdip_DrawArc(G, pPen, stat_regions["buffs"][1]+50+(A_Index-1)*(stat_regions["buffs"][3]-100-200)/4, stat_regions["buffs"][2]+410, 200, 200, -90-1+(nectar_value+projected_value)/100*360, 360+2-(nectar_value+projected_value)/100*360), Gdip_DeletePen(pPen)

		pBrush := Gdip_BrushCreateSolid(color)
		Gdip_TextToGraphics(G, nectar_value "%", "s54 Center Bold c" pBrush " x" stat_regions["buffs"][1]+150+(A_Index-1)*(stat_regions["buffs"][3]-100-200)/4 " y" stat_regions["buffs"][2]+(projected_value ? 456 : 472), "Segoe UI")
		Gdip_TextToGraphics(G, Format("{1:Us}", SubStr(j, 1, 3)), "s48 Center Bold c" pBrush " x" stat_regions["buffs"][1]+150+(A_Index-1)*(stat_regions["buffs"][3]-100-200)/4 " y" stat_regions["buffs"][2]+630, "Segoe UI")
		Gdip_DeleteBrush(pBrush)

		if projected_value
		{
			pBrush := Gdip_BrushCreateSolid(color-0x40000000)
			Gdip_TextToGraphics(G, "(+" Round(projected_value) "%)", "s28 Center Bold c" pBrush " x" stat_regions["buffs"][1]+150+(A_Index-1)*(stat_regions["buffs"][3]-100-200)/4 " y" stat_regions["buffs"][2]+516, "Segoe UI")
			Gdip_DeleteBrush(pBrush)
		}
	}

	; section 4: planters
	Gdip_TextToGraphics(G, "PLANTERS", "s64 Center Bold cffffffff x" stat_regions["planters"][1]+stat_regions["planters"][3]//2 " y" stat_regions["planters"][2]+4, "Segoe UI")

	if planters
	{
		i := 0
		Loop 3
		{
			if (PlanterName%A_Index% = "None")
				continue

			i++
			Gdip_DrawImage(G, bitmaps["pBM" PlanterName%A_Index%], stat_regions["planters"][1]+stat_regions["planters"][3]//2-(110+220*(planters-1))+(i-1)*440, stat_regions["planters"][2]+110, 220, 220)

			pos := Gdip_TextToGraphics(G, PlanterField%A_Index%, "s52 Center Bold cffffffff x" stat_regions["planters"][1]+stat_regions["planters"][3]//2-(110+220*(planters-1))+(i-1)*440+74 " y" stat_regions["planters"][2]+340, "Segoe UI")
			x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)
			Gdip_DrawImage(G, bitmaps["pBM" ((PlanterNectar%A_Index% = "None") ? "Unknown" : PlanterNectar%A_Index%)], x+6, stat_regions["planters"][2]+348, 60, 60)

			MPlanterHold%i% := IniRead("settings\nm_config.ini", "Planters", "MPlanterHold" i)
			MPlanterSmoking%i% := IniRead("settings\nm_config.ini", "Planters", "MPlanterSmoking" i)
			PlanterMode := IniRead("settings\nm_config.ini", "Planters", "PlanterMode")
			duration := ((time := PlanterHarvestTime%A_Index% - unix_now) > 360000) ? "N/A" : (time > 0) ? hmsFromSeconds(PlanterHarvestTime%A_Index% - unix_now) : (((MPlanterSmoking%i%) && (PlanterMode = 1)) ? "Smoking" : ((MPlanterHold%i%) && (PlanterMode = 1)) ? "Holding" :  "Ready")
			pos := Gdip_TextToGraphics(G, duration, "s46 Center Bold ccfffffff x" stat_regions["planters"][1]+stat_regions["planters"][3]//2-(110+220*(planters-1))+(i-1)*440+130 " y" stat_regions["planters"][2]+406, "Segoe UI")
			x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)
			Gdip_DrawImage(G, bitmaps["pBMTimer"], x-60, stat_regions["planters"][2]+410, 56, 56, , , , , 0.811765)

			if (i >= planters)
				break
		}
		Loop (planters - i)
		{
			Gdip_DrawImage(G, bitmaps["pBMUnknown"], stat_regions["planters"][1]+stat_regions["planters"][3]//2-(110+220*(planters-1))+(i+A_Index-1)*440, stat_regions["planters"][2]+110, 220, 220)

			pos := Gdip_TextToGraphics(G, "None", "s52 Center Bold cffffffff x" stat_regions["planters"][1]+stat_regions["planters"][3]//2-(110+220*(planters-1))+(i+A_Index-1)*440+74 " y" stat_regions["planters"][2]+340, "Segoe UI")
			x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)
			Gdip_DrawImage(G, bitmaps["pBMUnknown"], x+6, stat_regions["planters"][2]+348, 60, 60)

			pos := Gdip_TextToGraphics(G, "N/A", "s46 Center Bold ccfffffff x" stat_regions["planters"][1]+stat_regions["planters"][3]//2-(110+220*(planters-1))+(i+A_Index-1)*440+130 " y" stat_regions["planters"][2]+406, "Segoe UI")
			x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)
			Gdip_DrawImage(G, bitmaps["pBMTimer"], x-60, stat_regions["planters"][2]+410, 56, 56, , , , , 0.811765)
		}
	}

	; section 5: stats
	pos := Gdip_TextToGraphics(G, "STATS", "s64 Center Bold cffffffff x" stat_regions["stats"][1]+stat_regions["stats"][3]//2 " y" stat_regions["stats"][2]+4, "Segoe UI")
	y := SubStr(pos, InStr(pos, "|", , , 1)+1, InStr(pos, "|", , , 2)-InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 3)+1, InStr(pos, "|", , , 4)-InStr(pos, "|", , , 3)-1)+4

	for i,j in stats
	{
		Gdip_TextToGraphics(G, j[1], "s60 Right Bold ccfffffff x" stat_regions["stats"][1]+stat_regions["stats"][3]//2-40 " y" y, "Segoe UI")
		pos := Gdip_TextToGraphics(G, j[2], "s60 Left Bold cffffffff x" stat_regions["stats"][1]+stat_regions["stats"][3]//2+40 " y" y, "Segoe UI")
		if (j[2] > stats_old[i][2])
		{
			x := stat_regions["stats"][1]+stat_regions["stats"][3]//2+240
			pBrush := Gdip_BrushCreateSolid((j[1] = "Disconnects") ? 0xffff0000 : 0xff00ff00), Gdip_FillPolygon(G, pBrush, [[x+45, y+23], [x+20, y+65], [x+70, y+65]]), Gdip_DeleteBrush(pBrush)
			x := stat_regions["stats"][1]+stat_regions["stats"][3]//2+312
			Gdip_TextToGraphics(G, j[2]-stats_old[i][2], "s40 Left Bold cafffffff x" x " y" y+16, "Segoe UI")
		}
		else
		{
			pBrush := Gdip_BrushCreateSolid(0xff666666)
			Gdip_FillRoundedRectangle(G, pBrush, stat_regions["stats"][1]+stat_regions["stats"][3]//2+260, y+36, 50, 12, 6)
			Gdip_DeleteBrush(pBrush)
		}
		y := SubStr(pos, InStr(pos, "|", , , 1)+1, InStr(pos, "|", , , 2)-InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 3)+1, InStr(pos, "|", , , 4)-InStr(pos, "|", , , 3)-1)-4
	}

	; section 6: info
	; row 1: statmonitor and natro version
	y := stat_regions["info"][2]+60
	pos := Gdip_TextToGraphics(G, "StatMonitor v" version " by SP", "s56 Center Bold c00ffffff x" stat_regions["info"][1]+stat_regions["info"][3]//2 " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)

	pos := Gdip_TextToGraphics(G, "StatMonitor v" version " by ", "s56 Left Bold cafffffff x" x " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)

	pos := Gdip_TextToGraphics(G, "SP", "s56 Left Bold cffff5f1f x" x " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)

	; row 2: report timestamp
	y := stat_regions["info"][2]+140
	FormatStr := Buffer(256), DllCall("GetLocaleInfoEx", "Ptr",0, "UInt",0x20, "Ptr",FormatStr.Ptr, "Int",256)
	DateStr := Buffer(512), DllCall("GetDateFormatEx", "Ptr",0, "UInt",0, "Ptr",0, "Str",StrReplace(StrReplace(StrReplace(StrReplace(StrGet(FormatStr), ", dddd"), "dddd, "), " dddd"), "dddd "), "Ptr",DateStr.Ptr, "Int",512, "Ptr",0)
	pos := Gdip_TextToGraphics(G, times[1] " - " times[7] " • " StrGet(DateStr), "s56 Center Bold c00ffffff x" stat_regions["info"][1]+stat_regions["info"][3]//2 " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)

	pos := Gdip_TextToGraphics(G, times[1] " - " times[7] " ", "s56 Left Bold cffffda3d x" x " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)

	pos := Gdip_TextToGraphics(G, "•", "s56 Left Bold cafffffff x" x " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)

	Gdip_TextToGraphics(G, StrGet(DateStr), "s56 Left Bold cffffda3d x" x " y" y, "Segoe UI")

	; row 3: OCR status
	y := stat_regions["info"][2]+220
	pos := Gdip_TextToGraphics(G, "OCR: " (ocr_enabled ? ("Enabled (" ocr_language ")") : ("Disabled")), "s56 Center Bold c00ffffff x" stat_regions["info"][1]+stat_regions["info"][3]//2 " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)

	pos := Gdip_TextToGraphics(G, "OCR: ", "s56 Left Bold cafffffff x" x " y" y, "Segoe UI")
	x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)

	Gdip_TextToGraphics(G, (ocr_enabled ? ("Enabled (" ocr_language ")") : ("Disabled")), "s56 Left Bold c" (ocr_enabled ? "ff4fdf26" : "ffcc0000") " x" x " y" y, "Segoe UI")

	; row 4: windows version
	y := stat_regions["info"][2]+300
	Gdip_TextToGraphics(G, os_version, "s56 Center Bold cff04b4e4 x" stat_regions["info"][1]+stat_regions["info"][3]//2 " y" y, "Segoe UI")

	; row 5: natro information
	if IsSet(natro_version)
	{
		y := stat_regions["info"][2]+380
		x := stat_regions["info"][1]+stat_regions["info"][3]//2-50

		pos := Gdip_TextToGraphics(G, "Natro v" natro_version, "s56 Left Bold c00ffffff x" x " y" y, "Segoe UI")
		x -= SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)/2
		pos := Gdip_TextToGraphics(G, "discord.gg/natromacro", "s56 Left Bold c00ffffff x" x " y" y, "Segoe UI")
		x -= SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)/2

		pos := Gdip_TextToGraphics(G, "discord.gg/natromacro", "s56 Left Bold Underline cff3366cc x" x " y" y, "Segoe UI")
		x := SubStr(pos, 1, InStr(pos, "|", , , 1)-1)+SubStr(pos, InStr(pos, "|", , , 2)+1, InStr(pos, "|", , , 3)-InStr(pos, "|", , , 2)-1)
		Gdip_DrawImage(G, bitmaps["pBMNatroLogo"], x+10, y, 80, 80)
		Gdip_TextToGraphics(G, "Natro v" natro_version, "s56 Left Bold cffb47bd1 x" x+100 " y" y, "Segoe UI")
	}

	Gdip_DeleteGraphics(G)

	webhook := IniRead("settings\nm_config.ini", "Status", "webhook")
	bottoken := IniRead("settings\nm_config.ini", "Status", "bottoken")
	discordMode := IniRead("settings\nm_config.ini", "Status", "discordMode")
	ReportChannelID := IniRead("settings\nm_config.ini", "Status", "ReportChannelID")
	if (StrLen(ReportChannelID) < 17)
		ReportChannelID := IniRead("settings\nm_config.ini", "Status", "MainChannelID")

	try
	{
		chars := "0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z"
		chars := Sort(chars, "D| Random")
		boundary := SubStr(StrReplace(chars, "|"), 1, 12)
		hData := DllCall("GlobalAlloc", "UInt", 0x2, "UPtr", 0, "Ptr")
		DllCall("ole32\CreateStreamOnHGlobal", "Ptr", hData, "Int", 0, "PtrP", &pStream:=0, "UInt")

		str :=
		(
		'
		------------------------------' boundary '
		Content-Disposition: form-data; name="payload_json"
		Content-Type: application/json

		{
			"embeds": [{
				"title": "**[' A_Hour ':' A_Min ':00] Hourly Report**",
				"color": "14052794",
				"image": {"url": "attachment://file.png"}
			}]
		}
		------------------------------' boundary '
		Content-Disposition: form-data; name="files[0]"; filename="file.png"
		Content-Type: image/png

		'
		)

		utf8 := Buffer(length := StrPut(str, "UTF-8") - 1), StrPut(str, utf8, length, "UTF-8")
		DllCall("shlwapi\IStream_Write", "Ptr", pStream, "Ptr", utf8.Ptr, "UInt", length, "UInt")

		pFileStream := Gdip_SaveBitmapToStream(pBMReport)
		DllCall("shlwapi\IStream_Size", "Ptr", pFileStream, "UInt64P", &size:=0, "UInt")
		DllCall("shlwapi\IStream_Reset", "Ptr", pFileStream, "UInt")
		DllCall("shlwapi\IStream_Copy", "Ptr", pFileStream, "Ptr", pStream, "UInt", size, "UInt")
		ObjRelease(pFileStream)

		str :=
		(
		'

		------------------------------' boundary '--
		'
		)

		utf8 := Buffer(length := StrPut(str, "UTF-8") - 1), StrPut(str, utf8, length, "UTF-8")
		DllCall("shlwapi\IStream_Write", "Ptr", pStream, "Ptr", utf8.Ptr, "UInt", length, "UInt")
		ObjRelease(pStream)

		pData := DllCall("GlobalLock", "Ptr", hData, "Ptr")
		size := DllCall("GlobalSize", "Ptr", pData, "UPtr")

		retData := ComObjArray(0x11, size)
		pvData := NumGet(ComObjValue(retData), 8 + A_PtrSize, "Ptr")
		DllCall("RtlMoveMemory", "Ptr", pvData, "Ptr", pData, "Ptr", size)

		DllCall("GlobalUnlock", "Ptr", hData)
		DllCall("GlobalFree", "Ptr", hData, "Ptr")
		contentType := "multipart/form-data; boundary=----------------------------" boundary

		wr := ComObject("WinHttp.WinHttpRequest.5.1")
		wr.Option[9] := 2720
		wr.Open("POST", (discordMode = 0) ? webhook : ("https://discord.com/api/v10/channels/" ReportChannelID "/messages"), 0)
		if (discordMode = 1)
		{
			wr.SetRequestHeader("User-Agent", "DiscordBot (AHK, " A_AhkVersion ")")
			wr.SetRequestHeader("Authorization", "Bot " bottoken)
		}
		wr.SetRequestHeader("Content-Type", contentType)
		wr.SetTimeouts(0, 60000, 120000, 30000)
		wr.Send(retData)
	}
	catch as e
	{
		message := "**[" A_Hour ":" A_Min ":" A_Sec "]**`n"
		. "**Failed to send Hourly Report!**`n"
		. "Gdip SaveBitmap Error: " result "`n`n"
		. "Exception Properties:`n"
		. ">>> What: " e.what "`n"
		. "File: " e.file "`n"
		. "Line: " e.line "`n"
		. "Message: " e.message "`n"
		. "Extra: " e.extra
		message := StrReplace(StrReplace(message, "\", "\\"), "`n", "\n")

		postdata :=
		(
		'
		{
			"embeds": [{
				"description": "' message '",
				"color": "15085139"
			}]
		}
		'
		)

		Send_WM_COPYDATA(postdata, "Status.ahk ahk_class AutoHotkey")
	}

	Gdip_DisposeImage(pBMReport)

	; save old stats for comparison
	for k,v in stats_old
		v[2] := stats[k][2]
	; reset honey values map
	honey_values.Clear()
	honey_values[0] := current_honey
	; reset backpack values map
	for k,v in backpack_values
		if (A_Index = backpack_values.Count)
			current_backpack := v
	backpack_values.Clear()
	backpack_values[0] := current_backpack
	; reset status changes array
	for k,v in status_changes
		if (A_Index = status_changes.Count)
			current_status := v
	status_changes.Clear()
	status_changes[0] := current_status
	; reset buff values array
	for k,v in buff_values
		v.Clear()
}

/*************************************************************************************************************
* @description: rounds a number (integer/float) to 4 s.f. and abbreviates it with common large number prefixes
* @returns: (string) result
* @author SP
*************************************************************************************************************/
FormatNumber(n)
{
	static numnames := ["M","B","T","Qa","Qi"]
	digit := floor(log(abs(n)))+1
	if (digit > 6)
	{
		numname := (digit-4)//3
		numstring := SubStr((round(n,4-digit)) / 10**(3*numname+3), 1, 5)
		numformat := (SubStr(numstring, 0) = ".") ? 1.000 : numstring, numname += (SubStr(numstring, 0) = ".") ? 1 : 0
		num := SubStr((round(n,4-digit)) / 10**(3*numname+3), 1, 5) " " numnames[numname]
	}
	else
	{
		num := Buffer(32), DllCall("GetNumberFormatEx","str","!x-sys-default-locale","uint",0,"str",n,"ptr",0,"Ptr",num.Ptr,"int",32)
		num := SubStr(StrGet(num), 1, -3)
	}
	return num
}

/**************************************************************************************************
* @description: responsible for receiving messages from the main macro script to set current status
* @param: wParam is the status number, lParam is the second of the hour when status started
* @author SP
**************************************************************************************************/
SetStatus(wParam, lParam, *){
	for k,v in status_changes
		if (lParam < k)
			return 0
	status_changes[lParam] := wParam
	return 0
}

/***********************************************************************************************
* @description: responsible for receiving messages from the main macro script to increment stats
* @param: wParam is the stat to be incrememted, lParam is the amount
* @author SP
***********************************************************************************************/
IncrementStat(wParam, lParam, *){
	stats[wParam][2] += lParam
	return 0
}

/************************************************************************************************************
* @description: receives messages from the background script to update ability values (pop/scorch star, etc.)
* @param: wParam is the ability (buff) to be changed, lParam is the value
* @author SP
************************************************************************************************************/
SetAbility(wParam, lParam, *){
	static arr := ["popstar"]
	time_value := (60*A_Min+A_Sec)//6, i := (time_value = 0) ? 600 : time_value
	buff_values[arr[wParam]][i] := lParam
	return 0
}

/**********************************************************************************************************
* @description: receives messages from the background script to set the current (filtered) backpack percent
* @param: wParam is the backpack percent, lParam is the second of the hour
* @author SP
**********************************************************************************************************/
SetBackpack(wParam, lParam, *){
	for k,v in backpack_values
		if (lParam < k)
			return 0
	backpack_values[lParam] := wParam
	return 0
}

/***************************************************************************************
* @description: these functions return the minimum and maximum values in maps and arrays
* @author modified versions of functions by FanaticGuru
* @url https://www.autohotkey.com/boards/viewtopic.php?t=40898
***************************************************************************************/
minX(List)
{
	List.__Enum().Call(, &X)
	for key, element in List
		if (IsNumber(element) && (element < X))
			X := element
	return X
}
maxX(List)
{
	List.__Enum().Call(, &X)
	for key, element in List
		if (IsNumber(element) && (element > X))
			X := element
	return X
}

/*************************************************************
* @description: OCR with UWP API
* @author malcev, teadrinker
* @url https://www.autohotkey.com/boards/viewtopic.php?t=72674
*************************************************************/
HBitmapToRandomAccessStream(hBitmap) {
	static IID_IRandomAccessStream := "{905A0FE1-BC53-11DF-8C49-001E4FC686DA}"
			, IID_IPicture            := "{7BF80980-BF32-101A-8BBB-00AA00300CAB}"
			, PICTYPE_BITMAP := 1
			, BSOS_DEFAULT   := 0
			, sz := 8 + A_PtrSize * 2

	DllCall("Ole32\CreateStreamOnHGlobal", "Ptr", 0, "UInt", true, "PtrP", &pIStream:=0, "UInt")

	PICTDESC := Buffer(sz, 0)
	NumPut("uint", sz
		, "uint", PICTYPE_BITMAP
		, "ptr", hBitmap, PICTDESC)

	riid := CLSIDFromString(IID_IPicture)
	DllCall("OleAut32\OleCreatePictureIndirect", "Ptr", PICTDESC, "Ptr", riid, "UInt", false, "PtrP", &pIPicture:=0, "UInt")
	; IPicture::SaveAsFile
	ComCall(15, pIPicture, "Ptr", pIStream, "UInt", true, "UIntP", &size:=0, "UInt")
	riid := CLSIDFromString(IID_IRandomAccessStream)
	DllCall("ShCore\CreateRandomAccessStreamOverStream", "Ptr", pIStream, "UInt", BSOS_DEFAULT, "Ptr", riid, "PtrP", &pIRandomAccessStream:=0, "UInt")
	ObjRelease(pIPicture)
	ObjRelease(pIStream)
	Return pIRandomAccessStream
}

CLSIDFromString(IID, &CLSID?) {
	CLSID := Buffer(16)
	if res := DllCall("ole32\CLSIDFromString", "WStr", IID, "Ptr", CLSID, "UInt")
	throw Error("CLSIDFromString failed. Error: " . Format("{:#x}", res))
	Return CLSID
}

ocr(file, lang := "FirstFromAvailableLanguages")
{
	static OcrEngineStatics, OcrEngine, MaxDimension, LanguageFactory, Language, CurrentLanguage:="", BitmapDecoderStatics, GlobalizationPreferencesStatics
	if !IsSet(OcrEngineStatics)
	{
		CreateClass("Windows.Globalization.Language", ILanguageFactory := "{9B0252AC-0C27-44F8-B792-9793FB66C63E}", &LanguageFactory)
		CreateClass("Windows.Graphics.Imaging.BitmapDecoder", IBitmapDecoderStatics := "{438CCB26-BCEF-4E95-BAD6-23A822E58D01}", &BitmapDecoderStatics)
		CreateClass("Windows.Media.Ocr.OcrEngine", IOcrEngineStatics := "{5BFFA85A-3384-3540-9940-699120D428A8}", &OcrEngineStatics)
		ComCall(6, OcrEngineStatics, "uint*", &MaxDimension:=0)
	}
	text := ""
	if (file = "ShowAvailableLanguages")
	{
		if !IsSet(GlobalizationPreferencesStatics)
			CreateClass("Windows.System.UserProfile.GlobalizationPreferences", IGlobalizationPreferencesStatics := "{01BF4326-ED37-4E96-B0E9-C1340D1EA158}", &GlobalizationPreferencesStatics)
		ComCall(9, GlobalizationPreferencesStatics, "ptr*", &LanguageList:=0)   ; get_Languages
		ComCall(7, LanguageList, "int*", &count:=0)   ; count
		loop count
		{
			ComCall(6, LanguageList, "int", A_Index-1, "ptr*", &hString:=0)   ; get_Item
			ComCall(6, LanguageFactory, "ptr", hString, "ptr*", &LanguageTest:=0)   ; CreateLanguage
			ComCall(8, OcrEngineStatics, "ptr", LanguageTest, "int*", &bool:=0)   ; IsLanguageSupported
			if (bool = 1)
			{
				ComCall(6, LanguageTest, "ptr*", &hText:=0)
				b := DllCall("Combase.dll\WindowsGetStringRawBuffer", "ptr", hText, "uint*", &length:=0, "ptr")
				text .= StrGet(b, "UTF-16") "`n"
			}
			ObjRelease(LanguageTest)
		}
		ObjRelease(LanguageList)
		return text
	}
	if (lang != CurrentLanguage) or (lang = "FirstFromAvailableLanguages")
	{
		if IsSet(OcrEngine)
		{
			ObjRelease(OcrEngine)
			if (CurrentLanguage != "FirstFromAvailableLanguages")
				ObjRelease(Language)
		}
		if (lang = "FirstFromAvailableLanguages")
			ComCall(10, OcrEngineStatics, "ptr*", OcrEngine)   ; TryCreateFromUserProfileLanguages
		else
		{
			CreateHString(lang, &hString)
			ComCall(6, LanguageFactory, "ptr", hString, "ptr*", &Language:=0)   ; CreateLanguage
			DeleteHString(hString)
			ComCall(9, OcrEngineStatics, "ptr", Language, "ptr*", &OcrEngine:=0)   ; TryCreateFromLanguage
		}
		if (OcrEngine = 0)
		{
			msgbox 'Can not use language "' lang '" for OCR, please install language pack.'
			ExitApp
		}
		CurrentLanguage := lang
	}
	IRandomAccessStream := file
	ComCall(14, BitmapDecoderStatics, "ptr", IRandomAccessStream, "ptr*", &BitmapDecoder:=0)   ; CreateAsync
	WaitForAsync(&BitmapDecoder)
	BitmapFrame := ComObjQuery(BitmapDecoder, IBitmapFrame := "{72A49A1C-8081-438D-91BC-94ECFC8185C6}")
	ComCall(12, BitmapFrame, "uint*", &width:=0)   ; get_PixelWidth
	ComCall(13, BitmapFrame, "uint*", &height:=0)   ; get_PixelHeight
	if (width > MaxDimension) or (height > MaxDimension)
	{
		msgbox 'Image is to big - ' width 'x' height '.`nIt should be maximum - ' MaxDimension ' pixels'
		ExitApp
	}
	BitmapFrameWithSoftwareBitmap := ComObjQuery(BitmapDecoder, IBitmapFrameWithSoftwareBitmap := "{FE287C9A-420C-4963-87AD-691436E08383}")
	ComCall(6, BitmapFrameWithSoftwareBitmap, "ptr*", &SoftwareBitmap:=0)   ; GetSoftwareBitmapAsync
	WaitForAsync(&SoftwareBitmap)
	ComCall(6, OcrEngine, "ptr", SoftwareBitmap, "ptr*", &OcrResult:=0)   ; RecognizeAsync
	WaitForAsync(&OcrResult)
	ComCall(6, OcrResult, "ptr*", &LinesList:=0)   ; get_Lines
	ComCall(7, LinesList, "int*", &count:=0)   ; count
	loop count
	{
		ComCall(6, LinesList, "int", A_Index-1, "ptr*", &OcrLine:=0)
		ComCall(7, OcrLine, "ptr*", &hText:=0)
		buf := DllCall("Combase.dll\WindowsGetStringRawBuffer", "ptr", hText, "uint*", &length:=0, "ptr")
		text .= StrGet(buf, "UTF-16") "`n"
		ObjRelease(OcrLine)
	}
	Close := ComObjQuery(IRandomAccessStream, IClosable := "{30D5A829-7FA4-4026-83BB-D75BAE4EA99E}")
	ComCall(6, Close)   ; Close
	Close := ComObjQuery(SoftwareBitmap, IClosable := "{30D5A829-7FA4-4026-83BB-D75BAE4EA99E}")
	ComCall(6, Close)   ; Close
	ObjRelease(IRandomAccessStream)
	ObjRelease(BitmapDecoder)
	ObjRelease(SoftwareBitmap)
	ObjRelease(OcrResult)
	ObjRelease(LinesList)
	return text
}

CreateClass(str, interface, &Class)
{
	CreateHString(str, &hString)
	GUID := CLSIDFromString(interface)
	result := DllCall("Combase.dll\RoGetActivationFactory", "ptr", hString, "ptr", GUID, "ptr*", &Class:=0)
	if (result != 0)
	{
		if (result = 0x80004002)
			msgbox "No such interface supported"
		else if (result = 0x80040154)
			msgbox "Class not registered"
		else
			msgbox "error: " result
	}
	DeleteHString(hString)
}

CreateHString(str, &hString)
{
	DllCall("Combase.dll\WindowsCreateString", "wstr", str, "uint", StrLen(str), "ptr*", &hString:=0)
}

DeleteHString(hString)
{
	DllCall("Combase.dll\WindowsDeleteString", "ptr", hString)
}

WaitForAsync(&Object)
{
	AsyncInfo := ComObjQuery(Object, IAsyncInfo := "{00000036-0000-0000-C000-000000000046}")
	loop
	{
		ComCall(7, AsyncInfo, "uint*", &status:=0)   ; IAsyncInfo.Status
		if (status != 0)
		{
			if (status != 1)
			{
				ComCall(8, AsyncInfo, "uint*", &ErrorCode:=0)   ; IAsyncInfo.ErrorCode
				msgbox "AsyncInfo status error: " ErrorCode
				ExitApp
			}
			break
		}
		sleep 10
	}
	ComCall(8, Object, "ptr*", &ObjectResult:=0)   ; GetResults
	ObjRelease(Object)
	Object := ObjectResult
}

Send_WM_COPYDATA(StringToSend, TargetScriptTitle, wParam:=0)
{
	CopyDataStruct := Buffer(3*A_PtrSize)
	SizeInBytes := (StrLen(StringToSend) + 1) * 2
	NumPut("Ptr", SizeInBytes
		, "Ptr", StrPtr(StringToSend)
		, CopyDataStruct, A_PtrSize)
	DetectHiddenWindows 1
	try ret := SendMessage(0x004A, wParam, CopyDataStruct,, TargetScriptTitle)
	DetectHiddenWindows 0
	return IsSet(ret) ? ret : 0
}